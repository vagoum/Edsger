State 0:
program' -> . program [ # ]
-- On T_Void shift to state 1
-- On T_Int shift to state 2
-- On T_Double shift to state 3
-- On T_Char shift to state 4
-- On T_Bool shift to state 5
-- On variable_declation shift to state 6
-- On type_i shift to state 7
-- On result_type shift to state 101
-- On program shift to state 167
-- On nonempty_list(declation) shift to state 168
-- On function_def shift to state 163
-- On function_declation shift to state 164
-- On declation shift to state 170
-- On basic_type shift to state 83

State 1:
result_type -> T_Void . [ T_Id ]
-- On T_Id reduce production result_type -> T_Void 

State 2:
basic_type -> T_Int . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbracket T_Lbrace T_Incr T_Id T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production basic_type -> T_Int 
-- On T_Semicolon reduce production basic_type -> T_Int 
-- On T_Rparen reduce production basic_type -> T_Int 
-- On T_Rbracket reduce production basic_type -> T_Int 
-- On T_Rbrace reduce production basic_type -> T_Int 
-- On T_Quest reduce production basic_type -> T_Int 
-- On T_PlusEq reduce production basic_type -> T_Int 
-- On T_Or reduce production basic_type -> T_Int 
-- On T_Neq reduce production basic_type -> T_Int 
-- On T_Mul reduce production basic_type -> T_Int 
-- On T_Mod_eq reduce production basic_type -> T_Int 
-- On T_Mod reduce production basic_type -> T_Int 
-- On T_Minus_eq reduce production basic_type -> T_Int 
-- On T_Leq reduce production basic_type -> T_Int 
-- On T_Le reduce production basic_type -> T_Int 
-- On T_Lbracket reduce production basic_type -> T_Int 
-- On T_Lbrace reduce production basic_type -> T_Int 
-- On T_Incr reduce production basic_type -> T_Int 
-- On T_Id reduce production basic_type -> T_Int 
-- On T_Gr reduce production basic_type -> T_Int 
-- On T_Geq reduce production basic_type -> T_Int 
-- On T_Equal reduce production basic_type -> T_Int 
-- On T_Eq reduce production basic_type -> T_Int 
-- On T_Dot_eq reduce production basic_type -> T_Int 
-- On T_Div_eq reduce production basic_type -> T_Int 
-- On T_Div reduce production basic_type -> T_Int 
-- On T_Decr reduce production basic_type -> T_Int 
-- On T_Comma reduce production basic_type -> T_Int 
-- On T_Colon reduce production basic_type -> T_Int 
-- On T_And reduce production basic_type -> T_Int 
-- On T_Add reduce production basic_type -> T_Int 

State 3:
basic_type -> T_Double . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbracket T_Lbrace T_Incr T_Id T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production basic_type -> T_Double 
-- On T_Semicolon reduce production basic_type -> T_Double 
-- On T_Rparen reduce production basic_type -> T_Double 
-- On T_Rbracket reduce production basic_type -> T_Double 
-- On T_Rbrace reduce production basic_type -> T_Double 
-- On T_Quest reduce production basic_type -> T_Double 
-- On T_PlusEq reduce production basic_type -> T_Double 
-- On T_Or reduce production basic_type -> T_Double 
-- On T_Neq reduce production basic_type -> T_Double 
-- On T_Mul reduce production basic_type -> T_Double 
-- On T_Mod_eq reduce production basic_type -> T_Double 
-- On T_Mod reduce production basic_type -> T_Double 
-- On T_Minus_eq reduce production basic_type -> T_Double 
-- On T_Leq reduce production basic_type -> T_Double 
-- On T_Le reduce production basic_type -> T_Double 
-- On T_Lbracket reduce production basic_type -> T_Double 
-- On T_Lbrace reduce production basic_type -> T_Double 
-- On T_Incr reduce production basic_type -> T_Double 
-- On T_Id reduce production basic_type -> T_Double 
-- On T_Gr reduce production basic_type -> T_Double 
-- On T_Geq reduce production basic_type -> T_Double 
-- On T_Equal reduce production basic_type -> T_Double 
-- On T_Eq reduce production basic_type -> T_Double 
-- On T_Dot_eq reduce production basic_type -> T_Double 
-- On T_Div_eq reduce production basic_type -> T_Double 
-- On T_Div reduce production basic_type -> T_Double 
-- On T_Decr reduce production basic_type -> T_Double 
-- On T_Comma reduce production basic_type -> T_Double 
-- On T_Colon reduce production basic_type -> T_Double 
-- On T_And reduce production basic_type -> T_Double 
-- On T_Add reduce production basic_type -> T_Double 

State 4:
basic_type -> T_Char . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbracket T_Lbrace T_Incr T_Id T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production basic_type -> T_Char 
-- On T_Semicolon reduce production basic_type -> T_Char 
-- On T_Rparen reduce production basic_type -> T_Char 
-- On T_Rbracket reduce production basic_type -> T_Char 
-- On T_Rbrace reduce production basic_type -> T_Char 
-- On T_Quest reduce production basic_type -> T_Char 
-- On T_PlusEq reduce production basic_type -> T_Char 
-- On T_Or reduce production basic_type -> T_Char 
-- On T_Neq reduce production basic_type -> T_Char 
-- On T_Mul reduce production basic_type -> T_Char 
-- On T_Mod_eq reduce production basic_type -> T_Char 
-- On T_Mod reduce production basic_type -> T_Char 
-- On T_Minus_eq reduce production basic_type -> T_Char 
-- On T_Leq reduce production basic_type -> T_Char 
-- On T_Le reduce production basic_type -> T_Char 
-- On T_Lbracket reduce production basic_type -> T_Char 
-- On T_Lbrace reduce production basic_type -> T_Char 
-- On T_Incr reduce production basic_type -> T_Char 
-- On T_Id reduce production basic_type -> T_Char 
-- On T_Gr reduce production basic_type -> T_Char 
-- On T_Geq reduce production basic_type -> T_Char 
-- On T_Equal reduce production basic_type -> T_Char 
-- On T_Eq reduce production basic_type -> T_Char 
-- On T_Dot_eq reduce production basic_type -> T_Char 
-- On T_Div_eq reduce production basic_type -> T_Char 
-- On T_Div reduce production basic_type -> T_Char 
-- On T_Decr reduce production basic_type -> T_Char 
-- On T_Comma reduce production basic_type -> T_Char 
-- On T_Colon reduce production basic_type -> T_Char 
-- On T_And reduce production basic_type -> T_Char 
-- On T_Add reduce production basic_type -> T_Char 

State 5:
basic_type -> T_Bool . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbracket T_Lbrace T_Incr T_Id T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production basic_type -> T_Bool 
-- On T_Semicolon reduce production basic_type -> T_Bool 
-- On T_Rparen reduce production basic_type -> T_Bool 
-- On T_Rbracket reduce production basic_type -> T_Bool 
-- On T_Rbrace reduce production basic_type -> T_Bool 
-- On T_Quest reduce production basic_type -> T_Bool 
-- On T_PlusEq reduce production basic_type -> T_Bool 
-- On T_Or reduce production basic_type -> T_Bool 
-- On T_Neq reduce production basic_type -> T_Bool 
-- On T_Mul reduce production basic_type -> T_Bool 
-- On T_Mod_eq reduce production basic_type -> T_Bool 
-- On T_Mod reduce production basic_type -> T_Bool 
-- On T_Minus_eq reduce production basic_type -> T_Bool 
-- On T_Leq reduce production basic_type -> T_Bool 
-- On T_Le reduce production basic_type -> T_Bool 
-- On T_Lbracket reduce production basic_type -> T_Bool 
-- On T_Lbrace reduce production basic_type -> T_Bool 
-- On T_Incr reduce production basic_type -> T_Bool 
-- On T_Id reduce production basic_type -> T_Bool 
-- On T_Gr reduce production basic_type -> T_Bool 
-- On T_Geq reduce production basic_type -> T_Bool 
-- On T_Equal reduce production basic_type -> T_Bool 
-- On T_Eq reduce production basic_type -> T_Bool 
-- On T_Dot_eq reduce production basic_type -> T_Bool 
-- On T_Div_eq reduce production basic_type -> T_Bool 
-- On T_Div reduce production basic_type -> T_Bool 
-- On T_Decr reduce production basic_type -> T_Bool 
-- On T_Comma reduce production basic_type -> T_Bool 
-- On T_Colon reduce production basic_type -> T_Bool 
-- On T_And reduce production basic_type -> T_Bool 
-- On T_Add reduce production basic_type -> T_Bool 

State 6:
declation -> variable_declation . [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Void reduce production declation -> variable_declation 
-- On T_True reduce production declation -> variable_declation 
-- On T_Sub reduce production declation -> variable_declation 
-- On T_Semicolon reduce production declation -> variable_declation 
-- On T_Return reduce production declation -> variable_declation 
-- On T_Rbrace reduce production declation -> variable_declation 
-- On T_Null reduce production declation -> variable_declation 
-- On T_Not reduce production declation -> variable_declation 
-- On T_New reduce production declation -> variable_declation 
-- On T_Mul reduce production declation -> variable_declation 
-- On T_Lparen reduce production declation -> variable_declation 
-- On T_Lbrace reduce production declation -> variable_declation 
-- On T_Int reduce production declation -> variable_declation 
-- On T_Incr reduce production declation -> variable_declation 
-- On T_If reduce production declation -> variable_declation 
-- On T_Id reduce production declation -> variable_declation 
-- On T_For reduce production declation -> variable_declation 
-- On T_False reduce production declation -> variable_declation 
-- On T_Eof reduce production declation -> variable_declation 
-- On T_Double reduce production declation -> variable_declation 
-- On T_Del reduce production declation -> variable_declation 
-- On T_Decr reduce production declation -> variable_declation 
-- On T_Cont reduce production declation -> variable_declation 
-- On T_Const_String reduce production declation -> variable_declation 
-- On T_Const_Real reduce production declation -> variable_declation 
-- On T_Const_Int reduce production declation -> variable_declation 
-- On T_Const_Char reduce production declation -> variable_declation 
-- On T_Char reduce production declation -> variable_declation 
-- On T_Break reduce production declation -> variable_declation 
-- On T_Bool reduce production declation -> variable_declation 
-- On T_Amp reduce production declation -> variable_declation 
-- On T_Add reduce production declation -> variable_declation 

State 7:
result_type -> type_i . [ T_Id ]
variable_declation -> type_i . declator_plus [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Id shift to state 8
-- On declator_plus shift to state 96
-- On declator shift to state 97
-- On T_Id reduce production result_type -> type_i 
** Conflict on T_Id

State 8:
declator -> T_Id . option(test) [ T_Semicolon T_Comma ]
-- On T_Lbracket shift to state 9
-- On test shift to state 94
-- On option(test) shift to state 95
-- On T_Semicolon reduce production option(test) -> 
-- On T_Comma reduce production option(test) -> 

State 9:
test -> T_Lbracket . constant_expression T_Rbracket [ T_Semicolon T_Comma ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 91
-- On constant_expression shift to state 92

State 10:
expression -> T_True . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production expression -> T_True 
-- On T_Semicolon reduce production expression -> T_True 
-- On T_Rparen reduce production expression -> T_True 
-- On T_Rbracket reduce production expression -> T_True 
-- On T_Rbrace reduce production expression -> T_True 
-- On T_Quest reduce production expression -> T_True 
-- On T_PlusEq reduce production expression -> T_True 
-- On T_Or reduce production expression -> T_True 
-- On T_Neq reduce production expression -> T_True 
-- On T_Mul reduce production expression -> T_True 
-- On T_Mod_eq reduce production expression -> T_True 
-- On T_Mod reduce production expression -> T_True 
-- On T_Minus_eq reduce production expression -> T_True 
-- On T_Leq reduce production expression -> T_True 
-- On T_Le reduce production expression -> T_True 
-- On T_Lbrace reduce production expression -> T_True 
-- On T_Incr reduce production expression -> T_True 
-- On T_Gr reduce production expression -> T_True 
-- On T_Geq reduce production expression -> T_True 
-- On T_Equal reduce production expression -> T_True 
-- On T_Eq reduce production expression -> T_True 
-- On T_Dot_eq reduce production expression -> T_True 
-- On T_Div_eq reduce production expression -> T_True 
-- On T_Div reduce production expression -> T_True 
-- On T_Decr reduce production expression -> T_True 
-- On T_Comma reduce production expression -> T_True 
-- On T_Colon reduce production expression -> T_True 
-- On T_And reduce production expression -> T_True 
-- On T_Add reduce production expression -> T_True 

State 11:
unary_operator -> T_Sub . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production unary_operator -> T_Sub 
-- On T_Sub reduce production unary_operator -> T_Sub 
-- On T_Null reduce production unary_operator -> T_Sub 
-- On T_Not reduce production unary_operator -> T_Sub 
-- On T_New reduce production unary_operator -> T_Sub 
-- On T_Mul reduce production unary_operator -> T_Sub 
-- On T_Lparen reduce production unary_operator -> T_Sub 
-- On T_Incr reduce production unary_operator -> T_Sub 
-- On T_Id reduce production unary_operator -> T_Sub 
-- On T_False reduce production unary_operator -> T_Sub 
-- On T_Del reduce production unary_operator -> T_Sub 
-- On T_Decr reduce production unary_operator -> T_Sub 
-- On T_Const_String reduce production unary_operator -> T_Sub 
-- On T_Const_Real reduce production unary_operator -> T_Sub 
-- On T_Const_Int reduce production unary_operator -> T_Sub 
-- On T_Const_Char reduce production unary_operator -> T_Sub 
-- On T_Amp reduce production unary_operator -> T_Sub 
-- On T_Add reduce production unary_operator -> T_Sub 

State 12:
expression -> T_Null . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production expression -> T_Null 
-- On T_Semicolon reduce production expression -> T_Null 
-- On T_Rparen reduce production expression -> T_Null 
-- On T_Rbracket reduce production expression -> T_Null 
-- On T_Rbrace reduce production expression -> T_Null 
-- On T_Quest reduce production expression -> T_Null 
-- On T_PlusEq reduce production expression -> T_Null 
-- On T_Or reduce production expression -> T_Null 
-- On T_Neq reduce production expression -> T_Null 
-- On T_Mul reduce production expression -> T_Null 
-- On T_Mod_eq reduce production expression -> T_Null 
-- On T_Mod reduce production expression -> T_Null 
-- On T_Minus_eq reduce production expression -> T_Null 
-- On T_Leq reduce production expression -> T_Null 
-- On T_Le reduce production expression -> T_Null 
-- On T_Lbrace reduce production expression -> T_Null 
-- On T_Incr reduce production expression -> T_Null 
-- On T_Gr reduce production expression -> T_Null 
-- On T_Geq reduce production expression -> T_Null 
-- On T_Equal reduce production expression -> T_Null 
-- On T_Eq reduce production expression -> T_Null 
-- On T_Dot_eq reduce production expression -> T_Null 
-- On T_Div_eq reduce production expression -> T_Null 
-- On T_Div reduce production expression -> T_Null 
-- On T_Decr reduce production expression -> T_Null 
-- On T_Comma reduce production expression -> T_Null 
-- On T_Colon reduce production expression -> T_Null 
-- On T_And reduce production expression -> T_Null 
-- On T_Add reduce production expression -> T_Null 

State 13:
unary_operator -> T_Not . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production unary_operator -> T_Not 
-- On T_Sub reduce production unary_operator -> T_Not 
-- On T_Null reduce production unary_operator -> T_Not 
-- On T_Not reduce production unary_operator -> T_Not 
-- On T_New reduce production unary_operator -> T_Not 
-- On T_Mul reduce production unary_operator -> T_Not 
-- On T_Lparen reduce production unary_operator -> T_Not 
-- On T_Incr reduce production unary_operator -> T_Not 
-- On T_Id reduce production unary_operator -> T_Not 
-- On T_False reduce production unary_operator -> T_Not 
-- On T_Del reduce production unary_operator -> T_Not 
-- On T_Decr reduce production unary_operator -> T_Not 
-- On T_Const_String reduce production unary_operator -> T_Not 
-- On T_Const_Real reduce production unary_operator -> T_Not 
-- On T_Const_Int reduce production unary_operator -> T_Not 
-- On T_Const_Char reduce production unary_operator -> T_Not 
-- On T_Amp reduce production unary_operator -> T_Not 
-- On T_Add reduce production unary_operator -> T_Not 

State 14:
expression -> T_New . type_i option(test8) [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Int shift to state 2
-- On T_Double shift to state 3
-- On T_Char shift to state 4
-- On T_Bool shift to state 5
-- On type_i shift to state 15
-- On basic_type shift to state 83

State 15:
expression -> T_New type_i . option(test8) [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Lbracket shift to state 16
-- On test8 shift to state 89
-- On option(test8) shift to state 90
-- On T_Sub reduce production option(test8) -> 
-- On T_Semicolon reduce production option(test8) -> 
-- On T_Rparen reduce production option(test8) -> 
-- On T_Rbracket reduce production option(test8) -> 
-- On T_Rbrace reduce production option(test8) -> 
-- On T_Quest reduce production option(test8) -> 
-- On T_PlusEq reduce production option(test8) -> 
-- On T_Or reduce production option(test8) -> 
-- On T_Neq reduce production option(test8) -> 
-- On T_Mul reduce production option(test8) -> 
-- On T_Mod_eq reduce production option(test8) -> 
-- On T_Mod reduce production option(test8) -> 
-- On T_Minus_eq reduce production option(test8) -> 
-- On T_Leq reduce production option(test8) -> 
-- On T_Le reduce production option(test8) -> 
-- On T_Lbrace reduce production option(test8) -> 
-- On T_Incr reduce production option(test8) -> 
-- On T_Gr reduce production option(test8) -> 
-- On T_Geq reduce production option(test8) -> 
-- On T_Equal reduce production option(test8) -> 
-- On T_Eq reduce production option(test8) -> 
-- On T_Dot_eq reduce production option(test8) -> 
-- On T_Div_eq reduce production option(test8) -> 
-- On T_Div reduce production option(test8) -> 
-- On T_Decr reduce production option(test8) -> 
-- On T_Comma reduce production option(test8) -> 
-- On T_Colon reduce production option(test8) -> 
-- On T_And reduce production option(test8) -> 
-- On T_Add reduce production option(test8) -> 

State 16:
test8 -> T_Lbracket . expression T_Rbracket [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 87

State 17:
unary_operator -> T_Mul . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production unary_operator -> T_Mul 
-- On T_Sub reduce production unary_operator -> T_Mul 
-- On T_Null reduce production unary_operator -> T_Mul 
-- On T_Not reduce production unary_operator -> T_Mul 
-- On T_New reduce production unary_operator -> T_Mul 
-- On T_Mul reduce production unary_operator -> T_Mul 
-- On T_Lparen reduce production unary_operator -> T_Mul 
-- On T_Incr reduce production unary_operator -> T_Mul 
-- On T_Id reduce production unary_operator -> T_Mul 
-- On T_False reduce production unary_operator -> T_Mul 
-- On T_Del reduce production unary_operator -> T_Mul 
-- On T_Decr reduce production unary_operator -> T_Mul 
-- On T_Const_String reduce production unary_operator -> T_Mul 
-- On T_Const_Real reduce production unary_operator -> T_Mul 
-- On T_Const_Int reduce production unary_operator -> T_Mul 
-- On T_Const_Char reduce production unary_operator -> T_Mul 
-- On T_Amp reduce production unary_operator -> T_Mul 
-- On T_Add reduce production unary_operator -> T_Mul 

State 18:
expression -> T_Lparen . expression T_Rparen [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> T_Lparen . type_i T_Rparen expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Int shift to state 2
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Double shift to state 3
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Char shift to state 4
-- On T_Bool shift to state 5
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On type_i shift to state 78
-- On expression shift to state 81
-- On basic_type shift to state 83

State 19:
unary_assig -> T_Incr . [ T_True T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Null T_Not T_New T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Lparen T_Leq T_Le T_Lbrace T_Incr T_Id T_Gr T_Geq T_False T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Comma T_Colon T_And T_Amp T_Add ]
-- On T_True reduce production unary_assig -> T_Incr 
-- On T_Sub reduce production unary_assig -> T_Incr 
-- On T_Semicolon reduce production unary_assig -> T_Incr 
-- On T_Rparen reduce production unary_assig -> T_Incr 
-- On T_Rbracket reduce production unary_assig -> T_Incr 
-- On T_Rbrace reduce production unary_assig -> T_Incr 
-- On T_Quest reduce production unary_assig -> T_Incr 
-- On T_PlusEq reduce production unary_assig -> T_Incr 
-- On T_Or reduce production unary_assig -> T_Incr 
-- On T_Null reduce production unary_assig -> T_Incr 
-- On T_Not reduce production unary_assig -> T_Incr 
-- On T_New reduce production unary_assig -> T_Incr 
-- On T_Neq reduce production unary_assig -> T_Incr 
-- On T_Mul reduce production unary_assig -> T_Incr 
-- On T_Mod_eq reduce production unary_assig -> T_Incr 
-- On T_Mod reduce production unary_assig -> T_Incr 
-- On T_Minus_eq reduce production unary_assig -> T_Incr 
-- On T_Lparen reduce production unary_assig -> T_Incr 
-- On T_Leq reduce production unary_assig -> T_Incr 
-- On T_Le reduce production unary_assig -> T_Incr 
-- On T_Lbrace reduce production unary_assig -> T_Incr 
-- On T_Incr reduce production unary_assig -> T_Incr 
-- On T_Id reduce production unary_assig -> T_Incr 
-- On T_Gr reduce production unary_assig -> T_Incr 
-- On T_Geq reduce production unary_assig -> T_Incr 
-- On T_False reduce production unary_assig -> T_Incr 
-- On T_Equal reduce production unary_assig -> T_Incr 
-- On T_Eq reduce production unary_assig -> T_Incr 
-- On T_Dot_eq reduce production unary_assig -> T_Incr 
-- On T_Div_eq reduce production unary_assig -> T_Incr 
-- On T_Div reduce production unary_assig -> T_Incr 
-- On T_Del reduce production unary_assig -> T_Incr 
-- On T_Decr reduce production unary_assig -> T_Incr 
-- On T_Const_String reduce production unary_assig -> T_Incr 
-- On T_Const_Real reduce production unary_assig -> T_Incr 
-- On T_Const_Int reduce production unary_assig -> T_Incr 
-- On T_Const_Char reduce production unary_assig -> T_Incr 
-- On T_Comma reduce production unary_assig -> T_Incr 
-- On T_Colon reduce production unary_assig -> T_Incr 
-- On T_And reduce production unary_assig -> T_Incr 
-- On T_Amp reduce production unary_assig -> T_Incr 
-- On T_Add reduce production unary_assig -> T_Incr 

State 20:
expression -> T_Id . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> T_Id . T_Lparen option(expression_list) T_Rparen [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Lparen shift to state 21
-- On T_Sub reduce production expression -> T_Id 
-- On T_Semicolon reduce production expression -> T_Id 
-- On T_Rparen reduce production expression -> T_Id 
-- On T_Rbracket reduce production expression -> T_Id 
-- On T_Rbrace reduce production expression -> T_Id 
-- On T_Quest reduce production expression -> T_Id 
-- On T_PlusEq reduce production expression -> T_Id 
-- On T_Or reduce production expression -> T_Id 
-- On T_Neq reduce production expression -> T_Id 
-- On T_Mul reduce production expression -> T_Id 
-- On T_Mod_eq reduce production expression -> T_Id 
-- On T_Mod reduce production expression -> T_Id 
-- On T_Minus_eq reduce production expression -> T_Id 
-- On T_Leq reduce production expression -> T_Id 
-- On T_Le reduce production expression -> T_Id 
-- On T_Lbrace reduce production expression -> T_Id 
-- On T_Incr reduce production expression -> T_Id 
-- On T_Gr reduce production expression -> T_Id 
-- On T_Geq reduce production expression -> T_Id 
-- On T_Equal reduce production expression -> T_Id 
-- On T_Eq reduce production expression -> T_Id 
-- On T_Dot_eq reduce production expression -> T_Id 
-- On T_Div_eq reduce production expression -> T_Id 
-- On T_Div reduce production expression -> T_Id 
-- On T_Decr reduce production expression -> T_Id 
-- On T_Comma reduce production expression -> T_Id 
-- On T_Colon reduce production expression -> T_Id 
-- On T_And reduce production expression -> T_Id 
-- On T_Add reduce production expression -> T_Id 

State 21:
expression -> T_Id T_Lparen . option(expression_list) T_Rparen [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On option(expression_list) shift to state 68
-- On expression_list shift to state 70
-- On expression shift to state 71
-- On T_Rparen reduce production option(expression_list) -> 

State 22:
expression -> T_False . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production expression -> T_False 
-- On T_Semicolon reduce production expression -> T_False 
-- On T_Rparen reduce production expression -> T_False 
-- On T_Rbracket reduce production expression -> T_False 
-- On T_Rbrace reduce production expression -> T_False 
-- On T_Quest reduce production expression -> T_False 
-- On T_PlusEq reduce production expression -> T_False 
-- On T_Or reduce production expression -> T_False 
-- On T_Neq reduce production expression -> T_False 
-- On T_Mul reduce production expression -> T_False 
-- On T_Mod_eq reduce production expression -> T_False 
-- On T_Mod reduce production expression -> T_False 
-- On T_Minus_eq reduce production expression -> T_False 
-- On T_Leq reduce production expression -> T_False 
-- On T_Le reduce production expression -> T_False 
-- On T_Lbrace reduce production expression -> T_False 
-- On T_Incr reduce production expression -> T_False 
-- On T_Gr reduce production expression -> T_False 
-- On T_Geq reduce production expression -> T_False 
-- On T_Equal reduce production expression -> T_False 
-- On T_Eq reduce production expression -> T_False 
-- On T_Dot_eq reduce production expression -> T_False 
-- On T_Div_eq reduce production expression -> T_False 
-- On T_Div reduce production expression -> T_False 
-- On T_Decr reduce production expression -> T_False 
-- On T_Comma reduce production expression -> T_False 
-- On T_Colon reduce production expression -> T_False 
-- On T_And reduce production expression -> T_False 
-- On T_Add reduce production expression -> T_False 

State 23:
expression -> T_Del . expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 67

State 24:
unary_assig -> T_Decr . [ T_True T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Null T_Not T_New T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Lparen T_Leq T_Le T_Lbrace T_Incr T_Id T_Gr T_Geq T_False T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Comma T_Colon T_And T_Amp T_Add ]
-- On T_True reduce production unary_assig -> T_Decr 
-- On T_Sub reduce production unary_assig -> T_Decr 
-- On T_Semicolon reduce production unary_assig -> T_Decr 
-- On T_Rparen reduce production unary_assig -> T_Decr 
-- On T_Rbracket reduce production unary_assig -> T_Decr 
-- On T_Rbrace reduce production unary_assig -> T_Decr 
-- On T_Quest reduce production unary_assig -> T_Decr 
-- On T_PlusEq reduce production unary_assig -> T_Decr 
-- On T_Or reduce production unary_assig -> T_Decr 
-- On T_Null reduce production unary_assig -> T_Decr 
-- On T_Not reduce production unary_assig -> T_Decr 
-- On T_New reduce production unary_assig -> T_Decr 
-- On T_Neq reduce production unary_assig -> T_Decr 
-- On T_Mul reduce production unary_assig -> T_Decr 
-- On T_Mod_eq reduce production unary_assig -> T_Decr 
-- On T_Mod reduce production unary_assig -> T_Decr 
-- On T_Minus_eq reduce production unary_assig -> T_Decr 
-- On T_Lparen reduce production unary_assig -> T_Decr 
-- On T_Leq reduce production unary_assig -> T_Decr 
-- On T_Le reduce production unary_assig -> T_Decr 
-- On T_Lbrace reduce production unary_assig -> T_Decr 
-- On T_Incr reduce production unary_assig -> T_Decr 
-- On T_Id reduce production unary_assig -> T_Decr 
-- On T_Gr reduce production unary_assig -> T_Decr 
-- On T_Geq reduce production unary_assig -> T_Decr 
-- On T_False reduce production unary_assig -> T_Decr 
-- On T_Equal reduce production unary_assig -> T_Decr 
-- On T_Eq reduce production unary_assig -> T_Decr 
-- On T_Dot_eq reduce production unary_assig -> T_Decr 
-- On T_Div_eq reduce production unary_assig -> T_Decr 
-- On T_Div reduce production unary_assig -> T_Decr 
-- On T_Del reduce production unary_assig -> T_Decr 
-- On T_Decr reduce production unary_assig -> T_Decr 
-- On T_Const_String reduce production unary_assig -> T_Decr 
-- On T_Const_Real reduce production unary_assig -> T_Decr 
-- On T_Const_Int reduce production unary_assig -> T_Decr 
-- On T_Const_Char reduce production unary_assig -> T_Decr 
-- On T_Comma reduce production unary_assig -> T_Decr 
-- On T_Colon reduce production unary_assig -> T_Decr 
-- On T_And reduce production unary_assig -> T_Decr 
-- On T_Amp reduce production unary_assig -> T_Decr 
-- On T_Add reduce production unary_assig -> T_Decr 

State 25:
expression -> T_Const_String . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production expression -> T_Const_String 
-- On T_Semicolon reduce production expression -> T_Const_String 
-- On T_Rparen reduce production expression -> T_Const_String 
-- On T_Rbracket reduce production expression -> T_Const_String 
-- On T_Rbrace reduce production expression -> T_Const_String 
-- On T_Quest reduce production expression -> T_Const_String 
-- On T_PlusEq reduce production expression -> T_Const_String 
-- On T_Or reduce production expression -> T_Const_String 
-- On T_Neq reduce production expression -> T_Const_String 
-- On T_Mul reduce production expression -> T_Const_String 
-- On T_Mod_eq reduce production expression -> T_Const_String 
-- On T_Mod reduce production expression -> T_Const_String 
-- On T_Minus_eq reduce production expression -> T_Const_String 
-- On T_Leq reduce production expression -> T_Const_String 
-- On T_Le reduce production expression -> T_Const_String 
-- On T_Lbrace reduce production expression -> T_Const_String 
-- On T_Incr reduce production expression -> T_Const_String 
-- On T_Gr reduce production expression -> T_Const_String 
-- On T_Geq reduce production expression -> T_Const_String 
-- On T_Equal reduce production expression -> T_Const_String 
-- On T_Eq reduce production expression -> T_Const_String 
-- On T_Dot_eq reduce production expression -> T_Const_String 
-- On T_Div_eq reduce production expression -> T_Const_String 
-- On T_Div reduce production expression -> T_Const_String 
-- On T_Decr reduce production expression -> T_Const_String 
-- On T_Comma reduce production expression -> T_Const_String 
-- On T_Colon reduce production expression -> T_Const_String 
-- On T_And reduce production expression -> T_Const_String 
-- On T_Add reduce production expression -> T_Const_String 

State 26:
expression -> T_Const_Real . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production expression -> T_Const_Real 
-- On T_Semicolon reduce production expression -> T_Const_Real 
-- On T_Rparen reduce production expression -> T_Const_Real 
-- On T_Rbracket reduce production expression -> T_Const_Real 
-- On T_Rbrace reduce production expression -> T_Const_Real 
-- On T_Quest reduce production expression -> T_Const_Real 
-- On T_PlusEq reduce production expression -> T_Const_Real 
-- On T_Or reduce production expression -> T_Const_Real 
-- On T_Neq reduce production expression -> T_Const_Real 
-- On T_Mul reduce production expression -> T_Const_Real 
-- On T_Mod_eq reduce production expression -> T_Const_Real 
-- On T_Mod reduce production expression -> T_Const_Real 
-- On T_Minus_eq reduce production expression -> T_Const_Real 
-- On T_Leq reduce production expression -> T_Const_Real 
-- On T_Le reduce production expression -> T_Const_Real 
-- On T_Lbrace reduce production expression -> T_Const_Real 
-- On T_Incr reduce production expression -> T_Const_Real 
-- On T_Gr reduce production expression -> T_Const_Real 
-- On T_Geq reduce production expression -> T_Const_Real 
-- On T_Equal reduce production expression -> T_Const_Real 
-- On T_Eq reduce production expression -> T_Const_Real 
-- On T_Dot_eq reduce production expression -> T_Const_Real 
-- On T_Div_eq reduce production expression -> T_Const_Real 
-- On T_Div reduce production expression -> T_Const_Real 
-- On T_Decr reduce production expression -> T_Const_Real 
-- On T_Comma reduce production expression -> T_Const_Real 
-- On T_Colon reduce production expression -> T_Const_Real 
-- On T_And reduce production expression -> T_Const_Real 
-- On T_Add reduce production expression -> T_Const_Real 

State 27:
expression -> T_Const_Int . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production expression -> T_Const_Int 
-- On T_Semicolon reduce production expression -> T_Const_Int 
-- On T_Rparen reduce production expression -> T_Const_Int 
-- On T_Rbracket reduce production expression -> T_Const_Int 
-- On T_Rbrace reduce production expression -> T_Const_Int 
-- On T_Quest reduce production expression -> T_Const_Int 
-- On T_PlusEq reduce production expression -> T_Const_Int 
-- On T_Or reduce production expression -> T_Const_Int 
-- On T_Neq reduce production expression -> T_Const_Int 
-- On T_Mul reduce production expression -> T_Const_Int 
-- On T_Mod_eq reduce production expression -> T_Const_Int 
-- On T_Mod reduce production expression -> T_Const_Int 
-- On T_Minus_eq reduce production expression -> T_Const_Int 
-- On T_Leq reduce production expression -> T_Const_Int 
-- On T_Le reduce production expression -> T_Const_Int 
-- On T_Lbrace reduce production expression -> T_Const_Int 
-- On T_Incr reduce production expression -> T_Const_Int 
-- On T_Gr reduce production expression -> T_Const_Int 
-- On T_Geq reduce production expression -> T_Const_Int 
-- On T_Equal reduce production expression -> T_Const_Int 
-- On T_Eq reduce production expression -> T_Const_Int 
-- On T_Dot_eq reduce production expression -> T_Const_Int 
-- On T_Div_eq reduce production expression -> T_Const_Int 
-- On T_Div reduce production expression -> T_Const_Int 
-- On T_Decr reduce production expression -> T_Const_Int 
-- On T_Comma reduce production expression -> T_Const_Int 
-- On T_Colon reduce production expression -> T_Const_Int 
-- On T_And reduce production expression -> T_Const_Int 
-- On T_Add reduce production expression -> T_Const_Int 

State 28:
expression -> T_Const_Char . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production expression -> T_Const_Char 
-- On T_Semicolon reduce production expression -> T_Const_Char 
-- On T_Rparen reduce production expression -> T_Const_Char 
-- On T_Rbracket reduce production expression -> T_Const_Char 
-- On T_Rbrace reduce production expression -> T_Const_Char 
-- On T_Quest reduce production expression -> T_Const_Char 
-- On T_PlusEq reduce production expression -> T_Const_Char 
-- On T_Or reduce production expression -> T_Const_Char 
-- On T_Neq reduce production expression -> T_Const_Char 
-- On T_Mul reduce production expression -> T_Const_Char 
-- On T_Mod_eq reduce production expression -> T_Const_Char 
-- On T_Mod reduce production expression -> T_Const_Char 
-- On T_Minus_eq reduce production expression -> T_Const_Char 
-- On T_Leq reduce production expression -> T_Const_Char 
-- On T_Le reduce production expression -> T_Const_Char 
-- On T_Lbrace reduce production expression -> T_Const_Char 
-- On T_Incr reduce production expression -> T_Const_Char 
-- On T_Gr reduce production expression -> T_Const_Char 
-- On T_Geq reduce production expression -> T_Const_Char 
-- On T_Equal reduce production expression -> T_Const_Char 
-- On T_Eq reduce production expression -> T_Const_Char 
-- On T_Dot_eq reduce production expression -> T_Const_Char 
-- On T_Div_eq reduce production expression -> T_Const_Char 
-- On T_Div reduce production expression -> T_Const_Char 
-- On T_Decr reduce production expression -> T_Const_Char 
-- On T_Comma reduce production expression -> T_Const_Char 
-- On T_Colon reduce production expression -> T_Const_Char 
-- On T_And reduce production expression -> T_Const_Char 
-- On T_Add reduce production expression -> T_Const_Char 

State 29:
unary_operator -> T_Amp . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production unary_operator -> T_Amp 
-- On T_Sub reduce production unary_operator -> T_Amp 
-- On T_Null reduce production unary_operator -> T_Amp 
-- On T_Not reduce production unary_operator -> T_Amp 
-- On T_New reduce production unary_operator -> T_Amp 
-- On T_Mul reduce production unary_operator -> T_Amp 
-- On T_Lparen reduce production unary_operator -> T_Amp 
-- On T_Incr reduce production unary_operator -> T_Amp 
-- On T_Id reduce production unary_operator -> T_Amp 
-- On T_False reduce production unary_operator -> T_Amp 
-- On T_Del reduce production unary_operator -> T_Amp 
-- On T_Decr reduce production unary_operator -> T_Amp 
-- On T_Const_String reduce production unary_operator -> T_Amp 
-- On T_Const_Real reduce production unary_operator -> T_Amp 
-- On T_Const_Int reduce production unary_operator -> T_Amp 
-- On T_Const_Char reduce production unary_operator -> T_Amp 
-- On T_Amp reduce production unary_operator -> T_Amp 
-- On T_Add reduce production unary_operator -> T_Amp 

State 30:
unary_operator -> T_Add . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production unary_operator -> T_Add 
-- On T_Sub reduce production unary_operator -> T_Add 
-- On T_Null reduce production unary_operator -> T_Add 
-- On T_Not reduce production unary_operator -> T_Add 
-- On T_New reduce production unary_operator -> T_Add 
-- On T_Mul reduce production unary_operator -> T_Add 
-- On T_Lparen reduce production unary_operator -> T_Add 
-- On T_Incr reduce production unary_operator -> T_Add 
-- On T_Id reduce production unary_operator -> T_Add 
-- On T_False reduce production unary_operator -> T_Add 
-- On T_Del reduce production unary_operator -> T_Add 
-- On T_Decr reduce production unary_operator -> T_Add 
-- On T_Const_String reduce production unary_operator -> T_Add 
-- On T_Const_Real reduce production unary_operator -> T_Add 
-- On T_Const_Int reduce production unary_operator -> T_Add 
-- On T_Const_Char reduce production unary_operator -> T_Add 
-- On T_Amp reduce production unary_operator -> T_Add 
-- On T_Add reduce production unary_operator -> T_Add 

State 31:
expression -> unary_operator . expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 66

State 32:
expression -> unary_assig . expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 33

State 33:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> unary_assig expression . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub shift to state 34
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62
-- On T_Sub reduce production expression -> unary_assig expression 
-- On T_Semicolon reduce production expression -> unary_assig expression 
-- On T_Rparen reduce production expression -> unary_assig expression 
-- On T_Rbracket reduce production expression -> unary_assig expression 
-- On T_Rbrace reduce production expression -> unary_assig expression 
-- On T_Quest reduce production expression -> unary_assig expression 
-- On T_PlusEq reduce production expression -> unary_assig expression 
-- On T_Or reduce production expression -> unary_assig expression 
-- On T_Neq reduce production expression -> unary_assig expression 
-- On T_Mul reduce production expression -> unary_assig expression 
-- On T_Mod_eq reduce production expression -> unary_assig expression 
-- On T_Mod reduce production expression -> unary_assig expression 
-- On T_Minus_eq reduce production expression -> unary_assig expression 
-- On T_Leq reduce production expression -> unary_assig expression 
-- On T_Le reduce production expression -> unary_assig expression 
-- On T_Lbrace reduce production expression -> unary_assig expression 
-- On T_Incr reduce production expression -> unary_assig expression 
-- On T_Gr reduce production expression -> unary_assig expression 
-- On T_Geq reduce production expression -> unary_assig expression 
-- On T_Equal reduce production expression -> unary_assig expression 
-- On T_Eq reduce production expression -> unary_assig expression 
-- On T_Dot_eq reduce production expression -> unary_assig expression 
-- On T_Div_eq reduce production expression -> unary_assig expression 
-- On T_Div reduce production expression -> unary_assig expression 
-- On T_Decr reduce production expression -> unary_assig expression 
-- On T_Comma reduce production expression -> unary_assig expression 
-- On T_Colon reduce production expression -> unary_assig expression 
-- On T_And reduce production expression -> unary_assig expression 
-- On T_Add reduce production expression -> unary_assig expression 
** Conflict on T_Sub T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add

State 34:
binary_operator -> T_Sub . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Sub 
-- On T_Sub reduce production binary_operator -> T_Sub 
-- On T_Null reduce production binary_operator -> T_Sub 
-- On T_Not reduce production binary_operator -> T_Sub 
-- On T_New reduce production binary_operator -> T_Sub 
-- On T_Mul reduce production binary_operator -> T_Sub 
-- On T_Lparen reduce production binary_operator -> T_Sub 
-- On T_Incr reduce production binary_operator -> T_Sub 
-- On T_Id reduce production binary_operator -> T_Sub 
-- On T_False reduce production binary_operator -> T_Sub 
-- On T_Del reduce production binary_operator -> T_Sub 
-- On T_Decr reduce production binary_operator -> T_Sub 
-- On T_Const_String reduce production binary_operator -> T_Sub 
-- On T_Const_Real reduce production binary_operator -> T_Sub 
-- On T_Const_Int reduce production binary_operator -> T_Sub 
-- On T_Const_Char reduce production binary_operator -> T_Sub 
-- On T_Amp reduce production binary_operator -> T_Sub 
-- On T_Add reduce production binary_operator -> T_Sub 

State 35:
expression -> expression T_Quest . expression T_Colon expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 36

State 36:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression T_Quest expression . T_Colon expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub shift to state 34
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_Colon shift to state 64
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62

State 37:
binary_assig -> T_PlusEq . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_assig -> T_PlusEq 
-- On T_Sub reduce production binary_assig -> T_PlusEq 
-- On T_Null reduce production binary_assig -> T_PlusEq 
-- On T_Not reduce production binary_assig -> T_PlusEq 
-- On T_New reduce production binary_assig -> T_PlusEq 
-- On T_Mul reduce production binary_assig -> T_PlusEq 
-- On T_Lparen reduce production binary_assig -> T_PlusEq 
-- On T_Incr reduce production binary_assig -> T_PlusEq 
-- On T_Id reduce production binary_assig -> T_PlusEq 
-- On T_False reduce production binary_assig -> T_PlusEq 
-- On T_Del reduce production binary_assig -> T_PlusEq 
-- On T_Decr reduce production binary_assig -> T_PlusEq 
-- On T_Const_String reduce production binary_assig -> T_PlusEq 
-- On T_Const_Real reduce production binary_assig -> T_PlusEq 
-- On T_Const_Int reduce production binary_assig -> T_PlusEq 
-- On T_Const_Char reduce production binary_assig -> T_PlusEq 
-- On T_Amp reduce production binary_assig -> T_PlusEq 
-- On T_Add reduce production binary_assig -> T_PlusEq 

State 38:
binary_operator -> T_Or . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Or 
-- On T_Sub reduce production binary_operator -> T_Or 
-- On T_Null reduce production binary_operator -> T_Or 
-- On T_Not reduce production binary_operator -> T_Or 
-- On T_New reduce production binary_operator -> T_Or 
-- On T_Mul reduce production binary_operator -> T_Or 
-- On T_Lparen reduce production binary_operator -> T_Or 
-- On T_Incr reduce production binary_operator -> T_Or 
-- On T_Id reduce production binary_operator -> T_Or 
-- On T_False reduce production binary_operator -> T_Or 
-- On T_Del reduce production binary_operator -> T_Or 
-- On T_Decr reduce production binary_operator -> T_Or 
-- On T_Const_String reduce production binary_operator -> T_Or 
-- On T_Const_Real reduce production binary_operator -> T_Or 
-- On T_Const_Int reduce production binary_operator -> T_Or 
-- On T_Const_Char reduce production binary_operator -> T_Or 
-- On T_Amp reduce production binary_operator -> T_Or 
-- On T_Add reduce production binary_operator -> T_Or 

State 39:
binary_operator -> T_Neq . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Neq 
-- On T_Sub reduce production binary_operator -> T_Neq 
-- On T_Null reduce production binary_operator -> T_Neq 
-- On T_Not reduce production binary_operator -> T_Neq 
-- On T_New reduce production binary_operator -> T_Neq 
-- On T_Mul reduce production binary_operator -> T_Neq 
-- On T_Lparen reduce production binary_operator -> T_Neq 
-- On T_Incr reduce production binary_operator -> T_Neq 
-- On T_Id reduce production binary_operator -> T_Neq 
-- On T_False reduce production binary_operator -> T_Neq 
-- On T_Del reduce production binary_operator -> T_Neq 
-- On T_Decr reduce production binary_operator -> T_Neq 
-- On T_Const_String reduce production binary_operator -> T_Neq 
-- On T_Const_Real reduce production binary_operator -> T_Neq 
-- On T_Const_Int reduce production binary_operator -> T_Neq 
-- On T_Const_Char reduce production binary_operator -> T_Neq 
-- On T_Amp reduce production binary_operator -> T_Neq 
-- On T_Add reduce production binary_operator -> T_Neq 

State 40:
binary_operator -> T_Mul . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Mul 
-- On T_Sub reduce production binary_operator -> T_Mul 
-- On T_Null reduce production binary_operator -> T_Mul 
-- On T_Not reduce production binary_operator -> T_Mul 
-- On T_New reduce production binary_operator -> T_Mul 
-- On T_Mul reduce production binary_operator -> T_Mul 
-- On T_Lparen reduce production binary_operator -> T_Mul 
-- On T_Incr reduce production binary_operator -> T_Mul 
-- On T_Id reduce production binary_operator -> T_Mul 
-- On T_False reduce production binary_operator -> T_Mul 
-- On T_Del reduce production binary_operator -> T_Mul 
-- On T_Decr reduce production binary_operator -> T_Mul 
-- On T_Const_String reduce production binary_operator -> T_Mul 
-- On T_Const_Real reduce production binary_operator -> T_Mul 
-- On T_Const_Int reduce production binary_operator -> T_Mul 
-- On T_Const_Char reduce production binary_operator -> T_Mul 
-- On T_Amp reduce production binary_operator -> T_Mul 
-- On T_Add reduce production binary_operator -> T_Mul 

State 41:
binary_assig -> T_Mod_eq . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_assig -> T_Mod_eq 
-- On T_Sub reduce production binary_assig -> T_Mod_eq 
-- On T_Null reduce production binary_assig -> T_Mod_eq 
-- On T_Not reduce production binary_assig -> T_Mod_eq 
-- On T_New reduce production binary_assig -> T_Mod_eq 
-- On T_Mul reduce production binary_assig -> T_Mod_eq 
-- On T_Lparen reduce production binary_assig -> T_Mod_eq 
-- On T_Incr reduce production binary_assig -> T_Mod_eq 
-- On T_Id reduce production binary_assig -> T_Mod_eq 
-- On T_False reduce production binary_assig -> T_Mod_eq 
-- On T_Del reduce production binary_assig -> T_Mod_eq 
-- On T_Decr reduce production binary_assig -> T_Mod_eq 
-- On T_Const_String reduce production binary_assig -> T_Mod_eq 
-- On T_Const_Real reduce production binary_assig -> T_Mod_eq 
-- On T_Const_Int reduce production binary_assig -> T_Mod_eq 
-- On T_Const_Char reduce production binary_assig -> T_Mod_eq 
-- On T_Amp reduce production binary_assig -> T_Mod_eq 
-- On T_Add reduce production binary_assig -> T_Mod_eq 

State 42:
binary_operator -> T_Mod . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Mod 
-- On T_Sub reduce production binary_operator -> T_Mod 
-- On T_Null reduce production binary_operator -> T_Mod 
-- On T_Not reduce production binary_operator -> T_Mod 
-- On T_New reduce production binary_operator -> T_Mod 
-- On T_Mul reduce production binary_operator -> T_Mod 
-- On T_Lparen reduce production binary_operator -> T_Mod 
-- On T_Incr reduce production binary_operator -> T_Mod 
-- On T_Id reduce production binary_operator -> T_Mod 
-- On T_False reduce production binary_operator -> T_Mod 
-- On T_Del reduce production binary_operator -> T_Mod 
-- On T_Decr reduce production binary_operator -> T_Mod 
-- On T_Const_String reduce production binary_operator -> T_Mod 
-- On T_Const_Real reduce production binary_operator -> T_Mod 
-- On T_Const_Int reduce production binary_operator -> T_Mod 
-- On T_Const_Char reduce production binary_operator -> T_Mod 
-- On T_Amp reduce production binary_operator -> T_Mod 
-- On T_Add reduce production binary_operator -> T_Mod 

State 43:
binary_assig -> T_Minus_eq . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_assig -> T_Minus_eq 
-- On T_Sub reduce production binary_assig -> T_Minus_eq 
-- On T_Null reduce production binary_assig -> T_Minus_eq 
-- On T_Not reduce production binary_assig -> T_Minus_eq 
-- On T_New reduce production binary_assig -> T_Minus_eq 
-- On T_Mul reduce production binary_assig -> T_Minus_eq 
-- On T_Lparen reduce production binary_assig -> T_Minus_eq 
-- On T_Incr reduce production binary_assig -> T_Minus_eq 
-- On T_Id reduce production binary_assig -> T_Minus_eq 
-- On T_False reduce production binary_assig -> T_Minus_eq 
-- On T_Del reduce production binary_assig -> T_Minus_eq 
-- On T_Decr reduce production binary_assig -> T_Minus_eq 
-- On T_Const_String reduce production binary_assig -> T_Minus_eq 
-- On T_Const_Real reduce production binary_assig -> T_Minus_eq 
-- On T_Const_Int reduce production binary_assig -> T_Minus_eq 
-- On T_Const_Char reduce production binary_assig -> T_Minus_eq 
-- On T_Amp reduce production binary_assig -> T_Minus_eq 
-- On T_Add reduce production binary_assig -> T_Minus_eq 

State 44:
binary_operator -> T_Leq . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Leq 
-- On T_Sub reduce production binary_operator -> T_Leq 
-- On T_Null reduce production binary_operator -> T_Leq 
-- On T_Not reduce production binary_operator -> T_Leq 
-- On T_New reduce production binary_operator -> T_Leq 
-- On T_Mul reduce production binary_operator -> T_Leq 
-- On T_Lparen reduce production binary_operator -> T_Leq 
-- On T_Incr reduce production binary_operator -> T_Leq 
-- On T_Id reduce production binary_operator -> T_Leq 
-- On T_False reduce production binary_operator -> T_Leq 
-- On T_Del reduce production binary_operator -> T_Leq 
-- On T_Decr reduce production binary_operator -> T_Leq 
-- On T_Const_String reduce production binary_operator -> T_Leq 
-- On T_Const_Real reduce production binary_operator -> T_Leq 
-- On T_Const_Int reduce production binary_operator -> T_Leq 
-- On T_Const_Char reduce production binary_operator -> T_Leq 
-- On T_Amp reduce production binary_operator -> T_Leq 
-- On T_Add reduce production binary_operator -> T_Leq 

State 45:
binary_operator -> T_Le . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Le 
-- On T_Sub reduce production binary_operator -> T_Le 
-- On T_Null reduce production binary_operator -> T_Le 
-- On T_Not reduce production binary_operator -> T_Le 
-- On T_New reduce production binary_operator -> T_Le 
-- On T_Mul reduce production binary_operator -> T_Le 
-- On T_Lparen reduce production binary_operator -> T_Le 
-- On T_Incr reduce production binary_operator -> T_Le 
-- On T_Id reduce production binary_operator -> T_Le 
-- On T_False reduce production binary_operator -> T_Le 
-- On T_Del reduce production binary_operator -> T_Le 
-- On T_Decr reduce production binary_operator -> T_Le 
-- On T_Const_String reduce production binary_operator -> T_Le 
-- On T_Const_Real reduce production binary_operator -> T_Le 
-- On T_Const_Int reduce production binary_operator -> T_Le 
-- On T_Const_Char reduce production binary_operator -> T_Le 
-- On T_Amp reduce production binary_operator -> T_Le 
-- On T_Add reduce production binary_operator -> T_Le 

State 46:
expression -> expression T_Lbrace . expression T_Rbrace [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 47

State 47:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression T_Lbrace expression . T_Rbrace [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
-- On T_Sub shift to state 34
-- On T_Rbrace shift to state 48
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62

State 48:
expression -> expression T_Lbrace expression T_Rbrace . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Semicolon reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Rparen reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Rbracket reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Rbrace reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Quest reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_PlusEq reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Or reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Neq reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Mul reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Mod_eq reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Mod reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Minus_eq reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Leq reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Le reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Lbrace reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Incr reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Gr reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Geq reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Equal reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Eq reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Dot_eq reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Div_eq reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Div reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Decr reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Comma reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Colon reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_And reduce production expression -> expression T_Lbrace expression T_Rbrace 
-- On T_Add reduce production expression -> expression T_Lbrace expression T_Rbrace 

State 49:
binary_operator -> T_Gr . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Gr 
-- On T_Sub reduce production binary_operator -> T_Gr 
-- On T_Null reduce production binary_operator -> T_Gr 
-- On T_Not reduce production binary_operator -> T_Gr 
-- On T_New reduce production binary_operator -> T_Gr 
-- On T_Mul reduce production binary_operator -> T_Gr 
-- On T_Lparen reduce production binary_operator -> T_Gr 
-- On T_Incr reduce production binary_operator -> T_Gr 
-- On T_Id reduce production binary_operator -> T_Gr 
-- On T_False reduce production binary_operator -> T_Gr 
-- On T_Del reduce production binary_operator -> T_Gr 
-- On T_Decr reduce production binary_operator -> T_Gr 
-- On T_Const_String reduce production binary_operator -> T_Gr 
-- On T_Const_Real reduce production binary_operator -> T_Gr 
-- On T_Const_Int reduce production binary_operator -> T_Gr 
-- On T_Const_Char reduce production binary_operator -> T_Gr 
-- On T_Amp reduce production binary_operator -> T_Gr 
-- On T_Add reduce production binary_operator -> T_Gr 

State 50:
binary_operator -> T_Geq . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Geq 
-- On T_Sub reduce production binary_operator -> T_Geq 
-- On T_Null reduce production binary_operator -> T_Geq 
-- On T_Not reduce production binary_operator -> T_Geq 
-- On T_New reduce production binary_operator -> T_Geq 
-- On T_Mul reduce production binary_operator -> T_Geq 
-- On T_Lparen reduce production binary_operator -> T_Geq 
-- On T_Incr reduce production binary_operator -> T_Geq 
-- On T_Id reduce production binary_operator -> T_Geq 
-- On T_False reduce production binary_operator -> T_Geq 
-- On T_Del reduce production binary_operator -> T_Geq 
-- On T_Decr reduce production binary_operator -> T_Geq 
-- On T_Const_String reduce production binary_operator -> T_Geq 
-- On T_Const_Real reduce production binary_operator -> T_Geq 
-- On T_Const_Int reduce production binary_operator -> T_Geq 
-- On T_Const_Char reduce production binary_operator -> T_Geq 
-- On T_Amp reduce production binary_operator -> T_Geq 
-- On T_Add reduce production binary_operator -> T_Geq 

State 51:
binary_operator -> T_Equal . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Equal 
-- On T_Sub reduce production binary_operator -> T_Equal 
-- On T_Null reduce production binary_operator -> T_Equal 
-- On T_Not reduce production binary_operator -> T_Equal 
-- On T_New reduce production binary_operator -> T_Equal 
-- On T_Mul reduce production binary_operator -> T_Equal 
-- On T_Lparen reduce production binary_operator -> T_Equal 
-- On T_Incr reduce production binary_operator -> T_Equal 
-- On T_Id reduce production binary_operator -> T_Equal 
-- On T_False reduce production binary_operator -> T_Equal 
-- On T_Del reduce production binary_operator -> T_Equal 
-- On T_Decr reduce production binary_operator -> T_Equal 
-- On T_Const_String reduce production binary_operator -> T_Equal 
-- On T_Const_Real reduce production binary_operator -> T_Equal 
-- On T_Const_Int reduce production binary_operator -> T_Equal 
-- On T_Const_Char reduce production binary_operator -> T_Equal 
-- On T_Amp reduce production binary_operator -> T_Equal 
-- On T_Add reduce production binary_operator -> T_Equal 

State 52:
binary_assig -> T_Eq . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_assig -> T_Eq 
-- On T_Sub reduce production binary_assig -> T_Eq 
-- On T_Null reduce production binary_assig -> T_Eq 
-- On T_Not reduce production binary_assig -> T_Eq 
-- On T_New reduce production binary_assig -> T_Eq 
-- On T_Mul reduce production binary_assig -> T_Eq 
-- On T_Lparen reduce production binary_assig -> T_Eq 
-- On T_Incr reduce production binary_assig -> T_Eq 
-- On T_Id reduce production binary_assig -> T_Eq 
-- On T_False reduce production binary_assig -> T_Eq 
-- On T_Del reduce production binary_assig -> T_Eq 
-- On T_Decr reduce production binary_assig -> T_Eq 
-- On T_Const_String reduce production binary_assig -> T_Eq 
-- On T_Const_Real reduce production binary_assig -> T_Eq 
-- On T_Const_Int reduce production binary_assig -> T_Eq 
-- On T_Const_Char reduce production binary_assig -> T_Eq 
-- On T_Amp reduce production binary_assig -> T_Eq 
-- On T_Add reduce production binary_assig -> T_Eq 

State 53:
binary_assig -> T_Dot_eq . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_assig -> T_Dot_eq 
-- On T_Sub reduce production binary_assig -> T_Dot_eq 
-- On T_Null reduce production binary_assig -> T_Dot_eq 
-- On T_Not reduce production binary_assig -> T_Dot_eq 
-- On T_New reduce production binary_assig -> T_Dot_eq 
-- On T_Mul reduce production binary_assig -> T_Dot_eq 
-- On T_Lparen reduce production binary_assig -> T_Dot_eq 
-- On T_Incr reduce production binary_assig -> T_Dot_eq 
-- On T_Id reduce production binary_assig -> T_Dot_eq 
-- On T_False reduce production binary_assig -> T_Dot_eq 
-- On T_Del reduce production binary_assig -> T_Dot_eq 
-- On T_Decr reduce production binary_assig -> T_Dot_eq 
-- On T_Const_String reduce production binary_assig -> T_Dot_eq 
-- On T_Const_Real reduce production binary_assig -> T_Dot_eq 
-- On T_Const_Int reduce production binary_assig -> T_Dot_eq 
-- On T_Const_Char reduce production binary_assig -> T_Dot_eq 
-- On T_Amp reduce production binary_assig -> T_Dot_eq 
-- On T_Add reduce production binary_assig -> T_Dot_eq 

State 54:
binary_assig -> T_Div_eq . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_assig -> T_Div_eq 
-- On T_Sub reduce production binary_assig -> T_Div_eq 
-- On T_Null reduce production binary_assig -> T_Div_eq 
-- On T_Not reduce production binary_assig -> T_Div_eq 
-- On T_New reduce production binary_assig -> T_Div_eq 
-- On T_Mul reduce production binary_assig -> T_Div_eq 
-- On T_Lparen reduce production binary_assig -> T_Div_eq 
-- On T_Incr reduce production binary_assig -> T_Div_eq 
-- On T_Id reduce production binary_assig -> T_Div_eq 
-- On T_False reduce production binary_assig -> T_Div_eq 
-- On T_Del reduce production binary_assig -> T_Div_eq 
-- On T_Decr reduce production binary_assig -> T_Div_eq 
-- On T_Const_String reduce production binary_assig -> T_Div_eq 
-- On T_Const_Real reduce production binary_assig -> T_Div_eq 
-- On T_Const_Int reduce production binary_assig -> T_Div_eq 
-- On T_Const_Char reduce production binary_assig -> T_Div_eq 
-- On T_Amp reduce production binary_assig -> T_Div_eq 
-- On T_Add reduce production binary_assig -> T_Div_eq 

State 55:
binary_operator -> T_Div . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Div 
-- On T_Sub reduce production binary_operator -> T_Div 
-- On T_Null reduce production binary_operator -> T_Div 
-- On T_Not reduce production binary_operator -> T_Div 
-- On T_New reduce production binary_operator -> T_Div 
-- On T_Mul reduce production binary_operator -> T_Div 
-- On T_Lparen reduce production binary_operator -> T_Div 
-- On T_Incr reduce production binary_operator -> T_Div 
-- On T_Id reduce production binary_operator -> T_Div 
-- On T_False reduce production binary_operator -> T_Div 
-- On T_Del reduce production binary_operator -> T_Div 
-- On T_Decr reduce production binary_operator -> T_Div 
-- On T_Const_String reduce production binary_operator -> T_Div 
-- On T_Const_Real reduce production binary_operator -> T_Div 
-- On T_Const_Int reduce production binary_operator -> T_Div 
-- On T_Const_Char reduce production binary_operator -> T_Div 
-- On T_Amp reduce production binary_operator -> T_Div 
-- On T_Add reduce production binary_operator -> T_Div 

State 56:
binary_operator -> T_Comma . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Comma 
-- On T_Sub reduce production binary_operator -> T_Comma 
-- On T_Null reduce production binary_operator -> T_Comma 
-- On T_Not reduce production binary_operator -> T_Comma 
-- On T_New reduce production binary_operator -> T_Comma 
-- On T_Mul reduce production binary_operator -> T_Comma 
-- On T_Lparen reduce production binary_operator -> T_Comma 
-- On T_Incr reduce production binary_operator -> T_Comma 
-- On T_Id reduce production binary_operator -> T_Comma 
-- On T_False reduce production binary_operator -> T_Comma 
-- On T_Del reduce production binary_operator -> T_Comma 
-- On T_Decr reduce production binary_operator -> T_Comma 
-- On T_Const_String reduce production binary_operator -> T_Comma 
-- On T_Const_Real reduce production binary_operator -> T_Comma 
-- On T_Const_Int reduce production binary_operator -> T_Comma 
-- On T_Const_Char reduce production binary_operator -> T_Comma 
-- On T_Amp reduce production binary_operator -> T_Comma 
-- On T_Add reduce production binary_operator -> T_Comma 

State 57:
binary_operator -> T_And . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_And 
-- On T_Sub reduce production binary_operator -> T_And 
-- On T_Null reduce production binary_operator -> T_And 
-- On T_Not reduce production binary_operator -> T_And 
-- On T_New reduce production binary_operator -> T_And 
-- On T_Mul reduce production binary_operator -> T_And 
-- On T_Lparen reduce production binary_operator -> T_And 
-- On T_Incr reduce production binary_operator -> T_And 
-- On T_Id reduce production binary_operator -> T_And 
-- On T_False reduce production binary_operator -> T_And 
-- On T_Del reduce production binary_operator -> T_And 
-- On T_Decr reduce production binary_operator -> T_And 
-- On T_Const_String reduce production binary_operator -> T_And 
-- On T_Const_Real reduce production binary_operator -> T_And 
-- On T_Const_Int reduce production binary_operator -> T_And 
-- On T_Const_Char reduce production binary_operator -> T_And 
-- On T_Amp reduce production binary_operator -> T_And 
-- On T_Add reduce production binary_operator -> T_And 

State 58:
binary_operator -> T_Add . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
-- On T_True reduce production binary_operator -> T_Add 
-- On T_Sub reduce production binary_operator -> T_Add 
-- On T_Null reduce production binary_operator -> T_Add 
-- On T_Not reduce production binary_operator -> T_Add 
-- On T_New reduce production binary_operator -> T_Add 
-- On T_Mul reduce production binary_operator -> T_Add 
-- On T_Lparen reduce production binary_operator -> T_Add 
-- On T_Incr reduce production binary_operator -> T_Add 
-- On T_Id reduce production binary_operator -> T_Add 
-- On T_False reduce production binary_operator -> T_Add 
-- On T_Del reduce production binary_operator -> T_Add 
-- On T_Decr reduce production binary_operator -> T_Add 
-- On T_Const_String reduce production binary_operator -> T_Add 
-- On T_Const_Real reduce production binary_operator -> T_Add 
-- On T_Const_Int reduce production binary_operator -> T_Add 
-- On T_Const_Char reduce production binary_operator -> T_Add 
-- On T_Amp reduce production binary_operator -> T_Add 
-- On T_Add reduce production binary_operator -> T_Add 

State 59:
expression -> expression unary_assig . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production expression -> expression unary_assig 
-- On T_Semicolon reduce production expression -> expression unary_assig 
-- On T_Rparen reduce production expression -> expression unary_assig 
-- On T_Rbracket reduce production expression -> expression unary_assig 
-- On T_Rbrace reduce production expression -> expression unary_assig 
-- On T_Quest reduce production expression -> expression unary_assig 
-- On T_PlusEq reduce production expression -> expression unary_assig 
-- On T_Or reduce production expression -> expression unary_assig 
-- On T_Neq reduce production expression -> expression unary_assig 
-- On T_Mul reduce production expression -> expression unary_assig 
-- On T_Mod_eq reduce production expression -> expression unary_assig 
-- On T_Mod reduce production expression -> expression unary_assig 
-- On T_Minus_eq reduce production expression -> expression unary_assig 
-- On T_Leq reduce production expression -> expression unary_assig 
-- On T_Le reduce production expression -> expression unary_assig 
-- On T_Lbrace reduce production expression -> expression unary_assig 
-- On T_Incr reduce production expression -> expression unary_assig 
-- On T_Gr reduce production expression -> expression unary_assig 
-- On T_Geq reduce production expression -> expression unary_assig 
-- On T_Equal reduce production expression -> expression unary_assig 
-- On T_Eq reduce production expression -> expression unary_assig 
-- On T_Dot_eq reduce production expression -> expression unary_assig 
-- On T_Div_eq reduce production expression -> expression unary_assig 
-- On T_Div reduce production expression -> expression unary_assig 
-- On T_Decr reduce production expression -> expression unary_assig 
-- On T_Comma reduce production expression -> expression unary_assig 
-- On T_Colon reduce production expression -> expression unary_assig 
-- On T_And reduce production expression -> expression unary_assig 
-- On T_Add reduce production expression -> expression unary_assig 

State 60:
expression -> expression binary_operator . expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 61

State 61:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression binary_operator expression . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub shift to state 34
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62
-- On T_Sub reduce production expression -> expression binary_operator expression 
-- On T_Semicolon reduce production expression -> expression binary_operator expression 
-- On T_Rparen reduce production expression -> expression binary_operator expression 
-- On T_Rbracket reduce production expression -> expression binary_operator expression 
-- On T_Rbrace reduce production expression -> expression binary_operator expression 
-- On T_Quest reduce production expression -> expression binary_operator expression 
-- On T_PlusEq reduce production expression -> expression binary_operator expression 
-- On T_Or reduce production expression -> expression binary_operator expression 
-- On T_Neq reduce production expression -> expression binary_operator expression 
-- On T_Mul reduce production expression -> expression binary_operator expression 
-- On T_Mod_eq reduce production expression -> expression binary_operator expression 
-- On T_Mod reduce production expression -> expression binary_operator expression 
-- On T_Minus_eq reduce production expression -> expression binary_operator expression 
-- On T_Leq reduce production expression -> expression binary_operator expression 
-- On T_Le reduce production expression -> expression binary_operator expression 
-- On T_Lbrace reduce production expression -> expression binary_operator expression 
-- On T_Incr reduce production expression -> expression binary_operator expression 
-- On T_Gr reduce production expression -> expression binary_operator expression 
-- On T_Geq reduce production expression -> expression binary_operator expression 
-- On T_Equal reduce production expression -> expression binary_operator expression 
-- On T_Eq reduce production expression -> expression binary_operator expression 
-- On T_Dot_eq reduce production expression -> expression binary_operator expression 
-- On T_Div_eq reduce production expression -> expression binary_operator expression 
-- On T_Div reduce production expression -> expression binary_operator expression 
-- On T_Decr reduce production expression -> expression binary_operator expression 
-- On T_Comma reduce production expression -> expression binary_operator expression 
-- On T_Colon reduce production expression -> expression binary_operator expression 
-- On T_And reduce production expression -> expression binary_operator expression 
-- On T_Add reduce production expression -> expression binary_operator expression 
** Conflict on T_Sub T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add

State 62:
expression -> expression binary_assig . expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 63

State 63:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression binary_assig expression . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub shift to state 34
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62
-- On T_Sub reduce production expression -> expression binary_assig expression 
-- On T_Semicolon reduce production expression -> expression binary_assig expression 
-- On T_Rparen reduce production expression -> expression binary_assig expression 
-- On T_Rbracket reduce production expression -> expression binary_assig expression 
-- On T_Rbrace reduce production expression -> expression binary_assig expression 
-- On T_Quest reduce production expression -> expression binary_assig expression 
-- On T_PlusEq reduce production expression -> expression binary_assig expression 
-- On T_Or reduce production expression -> expression binary_assig expression 
-- On T_Neq reduce production expression -> expression binary_assig expression 
-- On T_Mul reduce production expression -> expression binary_assig expression 
-- On T_Mod_eq reduce production expression -> expression binary_assig expression 
-- On T_Mod reduce production expression -> expression binary_assig expression 
-- On T_Minus_eq reduce production expression -> expression binary_assig expression 
-- On T_Leq reduce production expression -> expression binary_assig expression 
-- On T_Le reduce production expression -> expression binary_assig expression 
-- On T_Lbrace reduce production expression -> expression binary_assig expression 
-- On T_Incr reduce production expression -> expression binary_assig expression 
-- On T_Gr reduce production expression -> expression binary_assig expression 
-- On T_Geq reduce production expression -> expression binary_assig expression 
-- On T_Equal reduce production expression -> expression binary_assig expression 
-- On T_Eq reduce production expression -> expression binary_assig expression 
-- On T_Dot_eq reduce production expression -> expression binary_assig expression 
-- On T_Div_eq reduce production expression -> expression binary_assig expression 
-- On T_Div reduce production expression -> expression binary_assig expression 
-- On T_Decr reduce production expression -> expression binary_assig expression 
-- On T_Comma reduce production expression -> expression binary_assig expression 
-- On T_Colon reduce production expression -> expression binary_assig expression 
-- On T_And reduce production expression -> expression binary_assig expression 
-- On T_Add reduce production expression -> expression binary_assig expression 
** Conflict on T_Sub T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add

State 64:
expression -> expression T_Quest expression T_Colon . expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 65

State 65:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression T_Quest expression T_Colon expression . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_PlusEq shift to state 37
-- On T_Mod_eq shift to state 41
-- On T_Minus_eq shift to state 43
-- On T_Lbrace shift to state 46
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Comma shift to state 56
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62
-- On T_Sub reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Semicolon reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Rparen reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Rbracket reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Rbrace reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Or reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Neq reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Mul reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Mod reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Leq reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Le reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Lbrace reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Incr reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Gr reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Geq reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Equal reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Div reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Decr reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Comma reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Colon reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_And reduce production expression -> expression T_Quest expression T_Colon expression 
-- On T_Add reduce production expression -> expression T_Quest expression T_Colon expression 
** Conflict on T_Lbrace T_Comma

State 66:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> unary_operator expression . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub shift to state 34
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62
-- On T_Sub reduce production expression -> unary_operator expression 
-- On T_Semicolon reduce production expression -> unary_operator expression 
-- On T_Rparen reduce production expression -> unary_operator expression 
-- On T_Rbracket reduce production expression -> unary_operator expression 
-- On T_Rbrace reduce production expression -> unary_operator expression 
-- On T_Quest reduce production expression -> unary_operator expression 
-- On T_PlusEq reduce production expression -> unary_operator expression 
-- On T_Or reduce production expression -> unary_operator expression 
-- On T_Neq reduce production expression -> unary_operator expression 
-- On T_Mul reduce production expression -> unary_operator expression 
-- On T_Mod_eq reduce production expression -> unary_operator expression 
-- On T_Mod reduce production expression -> unary_operator expression 
-- On T_Minus_eq reduce production expression -> unary_operator expression 
-- On T_Leq reduce production expression -> unary_operator expression 
-- On T_Le reduce production expression -> unary_operator expression 
-- On T_Lbrace reduce production expression -> unary_operator expression 
-- On T_Incr reduce production expression -> unary_operator expression 
-- On T_Gr reduce production expression -> unary_operator expression 
-- On T_Geq reduce production expression -> unary_operator expression 
-- On T_Equal reduce production expression -> unary_operator expression 
-- On T_Eq reduce production expression -> unary_operator expression 
-- On T_Dot_eq reduce production expression -> unary_operator expression 
-- On T_Div_eq reduce production expression -> unary_operator expression 
-- On T_Div reduce production expression -> unary_operator expression 
-- On T_Decr reduce production expression -> unary_operator expression 
-- On T_Comma reduce production expression -> unary_operator expression 
-- On T_Colon reduce production expression -> unary_operator expression 
-- On T_And reduce production expression -> unary_operator expression 
-- On T_Add reduce production expression -> unary_operator expression 
** Conflict on T_Sub T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add

State 67:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> T_Del expression . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub shift to state 34
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62
-- On T_Semicolon reduce production expression -> T_Del expression 
-- On T_Rparen reduce production expression -> T_Del expression 
-- On T_Rbracket reduce production expression -> T_Del expression 
-- On T_Rbrace reduce production expression -> T_Del expression 
-- On T_Lbrace reduce production expression -> T_Del expression 
-- On T_Incr reduce production expression -> T_Del expression 
-- On T_Decr reduce production expression -> T_Del expression 
-- On T_Comma reduce production expression -> T_Del expression 
-- On T_Colon reduce production expression -> T_Del expression 
** Conflict on T_Lbrace T_Comma

State 68:
expression -> T_Id T_Lparen option(expression_list) . T_Rparen [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Rparen shift to state 69

State 69:
expression -> T_Id T_Lparen option(expression_list) T_Rparen . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Semicolon reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Rparen reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Rbracket reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Rbrace reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Quest reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_PlusEq reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Or reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Neq reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Mul reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Mod_eq reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Mod reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Minus_eq reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Leq reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Le reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Lbrace reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Incr reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Gr reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Geq reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Equal reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Eq reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Dot_eq reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Div_eq reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Div reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Decr reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Comma reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Colon reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_And reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 
-- On T_Add reduce production expression -> T_Id T_Lparen option(expression_list) T_Rparen 

State 70:
option(expression_list) -> expression_list . [ T_Semicolon T_Rparen ]
-- On T_Semicolon reduce production option(expression_list) -> expression_list 
-- On T_Rparen reduce production option(expression_list) -> expression_list 

State 71:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression_list -> expression . list(test9) [ T_Semicolon T_Rparen ]
-- On T_Sub shift to state 34
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 72
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On test9 shift to state 74
-- On list(test9) shift to state 77
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62
-- On T_Semicolon reduce production list(test9) -> 
-- On T_Rparen reduce production list(test9) -> 

State 72:
binary_operator -> T_Comma . [ T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add ]
test9 -> T_Comma . expression [ T_Semicolon T_Rparen T_Comma ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 73
-- On T_True reduce production binary_operator -> T_Comma 
-- On T_Sub reduce production binary_operator -> T_Comma 
-- On T_Null reduce production binary_operator -> T_Comma 
-- On T_Not reduce production binary_operator -> T_Comma 
-- On T_New reduce production binary_operator -> T_Comma 
-- On T_Mul reduce production binary_operator -> T_Comma 
-- On T_Lparen reduce production binary_operator -> T_Comma 
-- On T_Incr reduce production binary_operator -> T_Comma 
-- On T_Id reduce production binary_operator -> T_Comma 
-- On T_False reduce production binary_operator -> T_Comma 
-- On T_Del reduce production binary_operator -> T_Comma 
-- On T_Decr reduce production binary_operator -> T_Comma 
-- On T_Const_String reduce production binary_operator -> T_Comma 
-- On T_Const_Real reduce production binary_operator -> T_Comma 
-- On T_Const_Int reduce production binary_operator -> T_Comma 
-- On T_Const_Char reduce production binary_operator -> T_Comma 
-- On T_Amp reduce production binary_operator -> T_Comma 
-- On T_Add reduce production binary_operator -> T_Comma 
** Conflict on T_True T_Sub T_Null T_Not T_New T_Mul T_Lparen T_Incr T_Id T_False T_Del T_Decr T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Amp T_Add

State 73:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
test9 -> T_Comma expression . [ T_Semicolon T_Rparen T_Comma ]
-- On T_Sub shift to state 34
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62
-- On T_Semicolon reduce production test9 -> T_Comma expression 
-- On T_Rparen reduce production test9 -> T_Comma expression 
-- On T_Comma reduce production test9 -> T_Comma expression 
** Conflict on T_Comma

State 74:
list(test9) -> test9 . list(test9) [ T_Semicolon T_Rparen ]
-- On T_Comma shift to state 75
-- On test9 shift to state 74
-- On list(test9) shift to state 76
-- On T_Semicolon reduce production list(test9) -> 
-- On T_Rparen reduce production list(test9) -> 

State 75:
test9 -> T_Comma . expression [ T_Semicolon T_Rparen T_Comma ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 73

State 76:
list(test9) -> test9 list(test9) . [ T_Semicolon T_Rparen ]
-- On T_Semicolon reduce production list(test9) -> test9 list(test9) 
-- On T_Rparen reduce production list(test9) -> test9 list(test9) 

State 77:
expression_list -> expression list(test9) . [ T_Semicolon T_Rparen ]
-- On T_Semicolon reduce production expression_list -> expression list(test9) 
-- On T_Rparen reduce production expression_list -> expression list(test9) 

State 78:
expression -> T_Lparen type_i . T_Rparen expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Rparen shift to state 79

State 79:
expression -> T_Lparen type_i T_Rparen . expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 80

State 80:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> T_Lparen type_i T_Rparen expression . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub shift to state 34
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62
-- On T_Sub reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Semicolon reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Rparen reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Rbracket reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Rbrace reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Quest reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_PlusEq reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Or reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Neq reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Mul reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Mod_eq reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Mod reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Minus_eq reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Leq reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Le reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Lbrace reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Incr reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Gr reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Geq reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Equal reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Eq reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Dot_eq reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Div_eq reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Div reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Decr reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Comma reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Colon reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_And reduce production expression -> T_Lparen type_i T_Rparen expression 
-- On T_Add reduce production expression -> T_Lparen type_i T_Rparen expression 
** Conflict on T_Sub T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add

State 81:
expression -> T_Lparen expression . T_Rparen [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
-- On T_Sub shift to state 34
-- On T_Rparen shift to state 82
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62

State 82:
expression -> T_Lparen expression T_Rparen . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Semicolon reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Rparen reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Rbracket reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Rbrace reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Quest reduce production expression -> T_Lparen expression T_Rparen 
-- On T_PlusEq reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Or reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Neq reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Mul reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Mod_eq reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Mod reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Minus_eq reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Leq reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Le reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Lbrace reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Incr reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Gr reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Geq reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Equal reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Eq reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Dot_eq reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Div_eq reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Div reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Decr reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Comma reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Colon reduce production expression -> T_Lparen expression T_Rparen 
-- On T_And reduce production expression -> T_Lparen expression T_Rparen 
-- On T_Add reduce production expression -> T_Lparen expression T_Rparen 

State 83:
type_i -> basic_type . list(T_Mul) [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbracket T_Lbrace T_Incr T_Id T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Mul shift to state 84
-- On list(T_Mul) shift to state 86
-- On T_Sub reduce production list(T_Mul) -> 
-- On T_Semicolon reduce production list(T_Mul) -> 
-- On T_Rparen reduce production list(T_Mul) -> 
-- On T_Rbracket reduce production list(T_Mul) -> 
-- On T_Rbrace reduce production list(T_Mul) -> 
-- On T_Quest reduce production list(T_Mul) -> 
-- On T_PlusEq reduce production list(T_Mul) -> 
-- On T_Or reduce production list(T_Mul) -> 
-- On T_Neq reduce production list(T_Mul) -> 
-- On T_Mul reduce production list(T_Mul) -> 
-- On T_Mod_eq reduce production list(T_Mul) -> 
-- On T_Mod reduce production list(T_Mul) -> 
-- On T_Minus_eq reduce production list(T_Mul) -> 
-- On T_Leq reduce production list(T_Mul) -> 
-- On T_Le reduce production list(T_Mul) -> 
-- On T_Lbracket reduce production list(T_Mul) -> 
-- On T_Lbrace reduce production list(T_Mul) -> 
-- On T_Incr reduce production list(T_Mul) -> 
-- On T_Id reduce production list(T_Mul) -> 
-- On T_Gr reduce production list(T_Mul) -> 
-- On T_Geq reduce production list(T_Mul) -> 
-- On T_Equal reduce production list(T_Mul) -> 
-- On T_Eq reduce production list(T_Mul) -> 
-- On T_Dot_eq reduce production list(T_Mul) -> 
-- On T_Div_eq reduce production list(T_Mul) -> 
-- On T_Div reduce production list(T_Mul) -> 
-- On T_Decr reduce production list(T_Mul) -> 
-- On T_Comma reduce production list(T_Mul) -> 
-- On T_Colon reduce production list(T_Mul) -> 
-- On T_And reduce production list(T_Mul) -> 
-- On T_Add reduce production list(T_Mul) -> 
** Conflict on T_Mul

State 84:
list(T_Mul) -> T_Mul . list(T_Mul) [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbracket T_Lbrace T_Incr T_Id T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Mul shift to state 84
-- On list(T_Mul) shift to state 85
-- On T_Sub reduce production list(T_Mul) -> 
-- On T_Semicolon reduce production list(T_Mul) -> 
-- On T_Rparen reduce production list(T_Mul) -> 
-- On T_Rbracket reduce production list(T_Mul) -> 
-- On T_Rbrace reduce production list(T_Mul) -> 
-- On T_Quest reduce production list(T_Mul) -> 
-- On T_PlusEq reduce production list(T_Mul) -> 
-- On T_Or reduce production list(T_Mul) -> 
-- On T_Neq reduce production list(T_Mul) -> 
-- On T_Mul reduce production list(T_Mul) -> 
-- On T_Mod_eq reduce production list(T_Mul) -> 
-- On T_Mod reduce production list(T_Mul) -> 
-- On T_Minus_eq reduce production list(T_Mul) -> 
-- On T_Leq reduce production list(T_Mul) -> 
-- On T_Le reduce production list(T_Mul) -> 
-- On T_Lbracket reduce production list(T_Mul) -> 
-- On T_Lbrace reduce production list(T_Mul) -> 
-- On T_Incr reduce production list(T_Mul) -> 
-- On T_Id reduce production list(T_Mul) -> 
-- On T_Gr reduce production list(T_Mul) -> 
-- On T_Geq reduce production list(T_Mul) -> 
-- On T_Equal reduce production list(T_Mul) -> 
-- On T_Eq reduce production list(T_Mul) -> 
-- On T_Dot_eq reduce production list(T_Mul) -> 
-- On T_Div_eq reduce production list(T_Mul) -> 
-- On T_Div reduce production list(T_Mul) -> 
-- On T_Decr reduce production list(T_Mul) -> 
-- On T_Comma reduce production list(T_Mul) -> 
-- On T_Colon reduce production list(T_Mul) -> 
-- On T_And reduce production list(T_Mul) -> 
-- On T_Add reduce production list(T_Mul) -> 
** Conflict on T_Mul

State 85:
list(T_Mul) -> T_Mul list(T_Mul) . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbracket T_Lbrace T_Incr T_Id T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Semicolon reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Rparen reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Rbracket reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Rbrace reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Quest reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_PlusEq reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Or reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Neq reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Mul reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Mod_eq reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Mod reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Minus_eq reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Leq reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Le reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Lbracket reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Lbrace reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Incr reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Id reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Gr reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Geq reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Equal reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Eq reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Dot_eq reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Div_eq reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Div reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Decr reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Comma reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Colon reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_And reduce production list(T_Mul) -> T_Mul list(T_Mul) 
-- On T_Add reduce production list(T_Mul) -> T_Mul list(T_Mul) 

State 86:
type_i -> basic_type list(T_Mul) . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbracket T_Lbrace T_Incr T_Id T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production type_i -> basic_type list(T_Mul) 
-- On T_Semicolon reduce production type_i -> basic_type list(T_Mul) 
-- On T_Rparen reduce production type_i -> basic_type list(T_Mul) 
-- On T_Rbracket reduce production type_i -> basic_type list(T_Mul) 
-- On T_Rbrace reduce production type_i -> basic_type list(T_Mul) 
-- On T_Quest reduce production type_i -> basic_type list(T_Mul) 
-- On T_PlusEq reduce production type_i -> basic_type list(T_Mul) 
-- On T_Or reduce production type_i -> basic_type list(T_Mul) 
-- On T_Neq reduce production type_i -> basic_type list(T_Mul) 
-- On T_Mul reduce production type_i -> basic_type list(T_Mul) 
-- On T_Mod_eq reduce production type_i -> basic_type list(T_Mul) 
-- On T_Mod reduce production type_i -> basic_type list(T_Mul) 
-- On T_Minus_eq reduce production type_i -> basic_type list(T_Mul) 
-- On T_Leq reduce production type_i -> basic_type list(T_Mul) 
-- On T_Le reduce production type_i -> basic_type list(T_Mul) 
-- On T_Lbracket reduce production type_i -> basic_type list(T_Mul) 
-- On T_Lbrace reduce production type_i -> basic_type list(T_Mul) 
-- On T_Incr reduce production type_i -> basic_type list(T_Mul) 
-- On T_Id reduce production type_i -> basic_type list(T_Mul) 
-- On T_Gr reduce production type_i -> basic_type list(T_Mul) 
-- On T_Geq reduce production type_i -> basic_type list(T_Mul) 
-- On T_Equal reduce production type_i -> basic_type list(T_Mul) 
-- On T_Eq reduce production type_i -> basic_type list(T_Mul) 
-- On T_Dot_eq reduce production type_i -> basic_type list(T_Mul) 
-- On T_Div_eq reduce production type_i -> basic_type list(T_Mul) 
-- On T_Div reduce production type_i -> basic_type list(T_Mul) 
-- On T_Decr reduce production type_i -> basic_type list(T_Mul) 
-- On T_Comma reduce production type_i -> basic_type list(T_Mul) 
-- On T_Colon reduce production type_i -> basic_type list(T_Mul) 
-- On T_And reduce production type_i -> basic_type list(T_Mul) 
-- On T_Add reduce production type_i -> basic_type list(T_Mul) 

State 87:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Rbracket T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Rbracket T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Rbracket T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Rbracket T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Rbracket T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
test8 -> T_Lbracket expression . T_Rbracket [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub shift to state 34
-- On T_Rbracket shift to state 88
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62

State 88:
test8 -> T_Lbracket expression T_Rbracket . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Semicolon reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Rparen reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Rbracket reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Rbrace reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Quest reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_PlusEq reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Or reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Neq reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Mul reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Mod_eq reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Mod reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Minus_eq reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Leq reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Le reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Lbrace reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Incr reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Gr reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Geq reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Equal reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Eq reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Dot_eq reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Div_eq reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Div reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Decr reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Comma reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Colon reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_And reduce production test8 -> T_Lbracket expression T_Rbracket 
-- On T_Add reduce production test8 -> T_Lbracket expression T_Rbracket 

State 89:
option(test8) -> test8 . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production option(test8) -> test8 
-- On T_Semicolon reduce production option(test8) -> test8 
-- On T_Rparen reduce production option(test8) -> test8 
-- On T_Rbracket reduce production option(test8) -> test8 
-- On T_Rbrace reduce production option(test8) -> test8 
-- On T_Quest reduce production option(test8) -> test8 
-- On T_PlusEq reduce production option(test8) -> test8 
-- On T_Or reduce production option(test8) -> test8 
-- On T_Neq reduce production option(test8) -> test8 
-- On T_Mul reduce production option(test8) -> test8 
-- On T_Mod_eq reduce production option(test8) -> test8 
-- On T_Mod reduce production option(test8) -> test8 
-- On T_Minus_eq reduce production option(test8) -> test8 
-- On T_Leq reduce production option(test8) -> test8 
-- On T_Le reduce production option(test8) -> test8 
-- On T_Lbrace reduce production option(test8) -> test8 
-- On T_Incr reduce production option(test8) -> test8 
-- On T_Gr reduce production option(test8) -> test8 
-- On T_Geq reduce production option(test8) -> test8 
-- On T_Equal reduce production option(test8) -> test8 
-- On T_Eq reduce production option(test8) -> test8 
-- On T_Dot_eq reduce production option(test8) -> test8 
-- On T_Div_eq reduce production option(test8) -> test8 
-- On T_Div reduce production option(test8) -> test8 
-- On T_Decr reduce production option(test8) -> test8 
-- On T_Comma reduce production option(test8) -> test8 
-- On T_Colon reduce production option(test8) -> test8 
-- On T_And reduce production option(test8) -> test8 
-- On T_Add reduce production option(test8) -> test8 

State 90:
expression -> T_New type_i option(test8) . [ T_Sub T_Semicolon T_Rparen T_Rbracket T_Rbrace T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_Colon T_And T_Add ]
-- On T_Sub reduce production expression -> T_New type_i option(test8) 
-- On T_Semicolon reduce production expression -> T_New type_i option(test8) 
-- On T_Rparen reduce production expression -> T_New type_i option(test8) 
-- On T_Rbracket reduce production expression -> T_New type_i option(test8) 
-- On T_Rbrace reduce production expression -> T_New type_i option(test8) 
-- On T_Quest reduce production expression -> T_New type_i option(test8) 
-- On T_PlusEq reduce production expression -> T_New type_i option(test8) 
-- On T_Or reduce production expression -> T_New type_i option(test8) 
-- On T_Neq reduce production expression -> T_New type_i option(test8) 
-- On T_Mul reduce production expression -> T_New type_i option(test8) 
-- On T_Mod_eq reduce production expression -> T_New type_i option(test8) 
-- On T_Mod reduce production expression -> T_New type_i option(test8) 
-- On T_Minus_eq reduce production expression -> T_New type_i option(test8) 
-- On T_Leq reduce production expression -> T_New type_i option(test8) 
-- On T_Le reduce production expression -> T_New type_i option(test8) 
-- On T_Lbrace reduce production expression -> T_New type_i option(test8) 
-- On T_Incr reduce production expression -> T_New type_i option(test8) 
-- On T_Gr reduce production expression -> T_New type_i option(test8) 
-- On T_Geq reduce production expression -> T_New type_i option(test8) 
-- On T_Equal reduce production expression -> T_New type_i option(test8) 
-- On T_Eq reduce production expression -> T_New type_i option(test8) 
-- On T_Dot_eq reduce production expression -> T_New type_i option(test8) 
-- On T_Div_eq reduce production expression -> T_New type_i option(test8) 
-- On T_Div reduce production expression -> T_New type_i option(test8) 
-- On T_Decr reduce production expression -> T_New type_i option(test8) 
-- On T_Comma reduce production expression -> T_New type_i option(test8) 
-- On T_Colon reduce production expression -> T_New type_i option(test8) 
-- On T_And reduce production expression -> T_New type_i option(test8) 
-- On T_Add reduce production expression -> T_New type_i option(test8) 

State 91:
constant_expression -> expression . [ T_Rbracket ]
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Rbracket T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Rbracket T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Rbracket T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Rbracket T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Rbracket T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
-- On T_Sub shift to state 34
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62
-- On T_Rbracket reduce production constant_expression -> expression 

State 92:
test -> T_Lbracket constant_expression . T_Rbracket [ T_Semicolon T_Comma ]
-- On T_Rbracket shift to state 93

State 93:
test -> T_Lbracket constant_expression T_Rbracket . [ T_Semicolon T_Comma ]
-- On T_Semicolon reduce production test -> T_Lbracket constant_expression T_Rbracket 
-- On T_Comma reduce production test -> T_Lbracket constant_expression T_Rbracket 

State 94:
option(test) -> test . [ T_Semicolon T_Comma ]
-- On T_Semicolon reduce production option(test) -> test 
-- On T_Comma reduce production option(test) -> test 

State 95:
declator -> T_Id option(test) . [ T_Semicolon T_Comma ]
-- On T_Semicolon reduce production declator -> T_Id option(test) 
-- On T_Comma reduce production declator -> T_Id option(test) 

State 96:
variable_declation -> type_i declator_plus . [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Void reduce production variable_declation -> type_i declator_plus 
-- On T_True reduce production variable_declation -> type_i declator_plus 
-- On T_Sub reduce production variable_declation -> type_i declator_plus 
-- On T_Semicolon reduce production variable_declation -> type_i declator_plus 
-- On T_Return reduce production variable_declation -> type_i declator_plus 
-- On T_Rbrace reduce production variable_declation -> type_i declator_plus 
-- On T_Null reduce production variable_declation -> type_i declator_plus 
-- On T_Not reduce production variable_declation -> type_i declator_plus 
-- On T_New reduce production variable_declation -> type_i declator_plus 
-- On T_Mul reduce production variable_declation -> type_i declator_plus 
-- On T_Lparen reduce production variable_declation -> type_i declator_plus 
-- On T_Lbrace reduce production variable_declation -> type_i declator_plus 
-- On T_Int reduce production variable_declation -> type_i declator_plus 
-- On T_Incr reduce production variable_declation -> type_i declator_plus 
-- On T_If reduce production variable_declation -> type_i declator_plus 
-- On T_Id reduce production variable_declation -> type_i declator_plus 
-- On T_For reduce production variable_declation -> type_i declator_plus 
-- On T_False reduce production variable_declation -> type_i declator_plus 
-- On T_Eof reduce production variable_declation -> type_i declator_plus 
-- On T_Double reduce production variable_declation -> type_i declator_plus 
-- On T_Del reduce production variable_declation -> type_i declator_plus 
-- On T_Decr reduce production variable_declation -> type_i declator_plus 
-- On T_Cont reduce production variable_declation -> type_i declator_plus 
-- On T_Const_String reduce production variable_declation -> type_i declator_plus 
-- On T_Const_Real reduce production variable_declation -> type_i declator_plus 
-- On T_Const_Int reduce production variable_declation -> type_i declator_plus 
-- On T_Const_Char reduce production variable_declation -> type_i declator_plus 
-- On T_Char reduce production variable_declation -> type_i declator_plus 
-- On T_Break reduce production variable_declation -> type_i declator_plus 
-- On T_Bool reduce production variable_declation -> type_i declator_plus 
-- On T_Amp reduce production variable_declation -> type_i declator_plus 
-- On T_Add reduce production variable_declation -> type_i declator_plus 

State 97:
declator_plus -> declator . T_Semicolon [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
declator_plus -> declator . T_Comma declator_plus [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Semicolon shift to state 98
-- On T_Comma shift to state 99

State 98:
declator_plus -> declator T_Semicolon . [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Void reduce production declator_plus -> declator T_Semicolon 
-- On T_True reduce production declator_plus -> declator T_Semicolon 
-- On T_Sub reduce production declator_plus -> declator T_Semicolon 
-- On T_Semicolon reduce production declator_plus -> declator T_Semicolon 
-- On T_Return reduce production declator_plus -> declator T_Semicolon 
-- On T_Rbrace reduce production declator_plus -> declator T_Semicolon 
-- On T_Null reduce production declator_plus -> declator T_Semicolon 
-- On T_Not reduce production declator_plus -> declator T_Semicolon 
-- On T_New reduce production declator_plus -> declator T_Semicolon 
-- On T_Mul reduce production declator_plus -> declator T_Semicolon 
-- On T_Lparen reduce production declator_plus -> declator T_Semicolon 
-- On T_Lbrace reduce production declator_plus -> declator T_Semicolon 
-- On T_Int reduce production declator_plus -> declator T_Semicolon 
-- On T_Incr reduce production declator_plus -> declator T_Semicolon 
-- On T_If reduce production declator_plus -> declator T_Semicolon 
-- On T_Id reduce production declator_plus -> declator T_Semicolon 
-- On T_For reduce production declator_plus -> declator T_Semicolon 
-- On T_False reduce production declator_plus -> declator T_Semicolon 
-- On T_Eof reduce production declator_plus -> declator T_Semicolon 
-- On T_Double reduce production declator_plus -> declator T_Semicolon 
-- On T_Del reduce production declator_plus -> declator T_Semicolon 
-- On T_Decr reduce production declator_plus -> declator T_Semicolon 
-- On T_Cont reduce production declator_plus -> declator T_Semicolon 
-- On T_Const_String reduce production declator_plus -> declator T_Semicolon 
-- On T_Const_Real reduce production declator_plus -> declator T_Semicolon 
-- On T_Const_Int reduce production declator_plus -> declator T_Semicolon 
-- On T_Const_Char reduce production declator_plus -> declator T_Semicolon 
-- On T_Char reduce production declator_plus -> declator T_Semicolon 
-- On T_Break reduce production declator_plus -> declator T_Semicolon 
-- On T_Bool reduce production declator_plus -> declator T_Semicolon 
-- On T_Amp reduce production declator_plus -> declator T_Semicolon 
-- On T_Add reduce production declator_plus -> declator T_Semicolon 

State 99:
declator_plus -> declator T_Comma . declator_plus [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Id shift to state 8
-- On declator_plus shift to state 100
-- On declator shift to state 97

State 100:
declator_plus -> declator T_Comma declator_plus . [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Void reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_True reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Sub reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Semicolon reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Return reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Rbrace reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Null reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Not reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_New reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Mul reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Lparen reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Lbrace reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Int reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Incr reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_If reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Id reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_For reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_False reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Eof reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Double reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Del reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Decr reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Cont reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Const_String reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Const_Real reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Const_Int reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Const_Char reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Char reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Break reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Bool reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Amp reduce production declator_plus -> declator T_Comma declator_plus 
-- On T_Add reduce production declator_plus -> declator T_Comma declator_plus 

State 101:
function_declation -> result_type . T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
function_def -> result_type . T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Id shift to state 102

State 102:
function_declation -> result_type T_Id . T_Lparen option(parameter_list) T_Rparen T_Semicolon [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
function_def -> result_type T_Id . T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Lparen shift to state 103

State 103:
function_declation -> result_type T_Id T_Lparen . option(parameter_list) T_Rparen T_Semicolon [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
function_def -> result_type T_Id T_Lparen . option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Byref shift to state 104
-- On parameter_list shift to state 105
-- On parameter shift to state 106
-- On option(parameter_list) shift to state 115
-- On option(T_Byref) shift to state 109
-- On T_Rparen reduce production option(parameter_list) -> 
-- On T_Int reduce production option(T_Byref) -> 
-- On T_Double reduce production option(T_Byref) -> 
-- On T_Char reduce production option(T_Byref) -> 
-- On T_Bool reduce production option(T_Byref) -> 

State 104:
option(T_Byref) -> T_Byref . [ T_Int T_Double T_Char T_Bool ]
-- On T_Int reduce production option(T_Byref) -> T_Byref 
-- On T_Double reduce production option(T_Byref) -> T_Byref 
-- On T_Char reduce production option(T_Byref) -> T_Byref 
-- On T_Bool reduce production option(T_Byref) -> T_Byref 

State 105:
option(parameter_list) -> parameter_list . [ T_Rparen ]
-- On T_Rparen reduce production option(parameter_list) -> parameter_list 

State 106:
parameter_list -> parameter . list(test2) [ T_Rparen ]
-- On T_Comma shift to state 107
-- On test2 shift to state 112
-- On list(test2) shift to state 114
-- On T_Rparen reduce production list(test2) -> 

State 107:
test2 -> T_Comma . parameter [ T_Rparen T_Comma ]
-- On T_Byref shift to state 104
-- On parameter shift to state 108
-- On option(T_Byref) shift to state 109
-- On T_Int reduce production option(T_Byref) -> 
-- On T_Double reduce production option(T_Byref) -> 
-- On T_Char reduce production option(T_Byref) -> 
-- On T_Bool reduce production option(T_Byref) -> 

State 108:
test2 -> T_Comma parameter . [ T_Rparen T_Comma ]
-- On T_Rparen reduce production test2 -> T_Comma parameter 
-- On T_Comma reduce production test2 -> T_Comma parameter 

State 109:
parameter -> option(T_Byref) . type_i T_Id [ T_Rparen T_Comma ]
-- On T_Int shift to state 2
-- On T_Double shift to state 3
-- On T_Char shift to state 4
-- On T_Bool shift to state 5
-- On type_i shift to state 110
-- On basic_type shift to state 83

State 110:
parameter -> option(T_Byref) type_i . T_Id [ T_Rparen T_Comma ]
-- On T_Id shift to state 111

State 111:
parameter -> option(T_Byref) type_i T_Id . [ T_Rparen T_Comma ]
-- On T_Rparen reduce production parameter -> option(T_Byref) type_i T_Id 
-- On T_Comma reduce production parameter -> option(T_Byref) type_i T_Id 

State 112:
list(test2) -> test2 . list(test2) [ T_Rparen ]
-- On T_Comma shift to state 107
-- On test2 shift to state 112
-- On list(test2) shift to state 113
-- On T_Rparen reduce production list(test2) -> 

State 113:
list(test2) -> test2 list(test2) . [ T_Rparen ]
-- On T_Rparen reduce production list(test2) -> test2 list(test2) 

State 114:
parameter_list -> parameter list(test2) . [ T_Rparen ]
-- On T_Rparen reduce production parameter_list -> parameter list(test2) 

State 115:
function_declation -> result_type T_Id T_Lparen option(parameter_list) . T_Rparen T_Semicolon [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
function_def -> result_type T_Id T_Lparen option(parameter_list) . T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Rparen shift to state 116

State 116:
function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen . T_Semicolon [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen . T_Lbrace list(declation) list(statement) T_Rbrace [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Semicolon shift to state 117
-- On T_Lbrace shift to state 118

State 117:
function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon . [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Void reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_True reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Sub reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Semicolon reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Return reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Rbrace reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Null reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Not reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_New reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Mul reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Lparen reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Lbrace reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Int reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Incr reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_If reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Id reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_For reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_False reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Eof reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Double reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Del reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Decr reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Cont reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Const_String reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Const_Real reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Const_Int reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Const_Char reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Char reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Break reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Bool reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Amp reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 
-- On T_Add reduce production function_declation -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Semicolon 

State 118:
function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace . list(declation) list(statement) T_Rbrace [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Void shift to state 1
-- On T_Int shift to state 2
-- On T_Double shift to state 3
-- On T_Char shift to state 4
-- On T_Bool shift to state 5
-- On variable_declation shift to state 6
-- On type_i shift to state 7
-- On result_type shift to state 101
-- On list(declation) shift to state 119
-- On function_def shift to state 163
-- On function_declation shift to state 164
-- On declation shift to state 165
-- On basic_type shift to state 83
-- On T_True reduce production list(declation) -> 
-- On T_Sub reduce production list(declation) -> 
-- On T_Semicolon reduce production list(declation) -> 
-- On T_Return reduce production list(declation) -> 
-- On T_Rbrace reduce production list(declation) -> 
-- On T_Null reduce production list(declation) -> 
-- On T_Not reduce production list(declation) -> 
-- On T_New reduce production list(declation) -> 
-- On T_Mul reduce production list(declation) -> 
-- On T_Lparen reduce production list(declation) -> 
-- On T_Lbrace reduce production list(declation) -> 
-- On T_Incr reduce production list(declation) -> 
-- On T_If reduce production list(declation) -> 
-- On T_Id reduce production list(declation) -> 
-- On T_For reduce production list(declation) -> 
-- On T_False reduce production list(declation) -> 
-- On T_Del reduce production list(declation) -> 
-- On T_Decr reduce production list(declation) -> 
-- On T_Cont reduce production list(declation) -> 
-- On T_Const_String reduce production list(declation) -> 
-- On T_Const_Real reduce production list(declation) -> 
-- On T_Const_Int reduce production list(declation) -> 
-- On T_Const_Char reduce production list(declation) -> 
-- On T_Break reduce production list(declation) -> 
-- On T_Amp reduce production list(declation) -> 
-- On T_Add reduce production list(declation) -> 

State 119:
function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) . list(statement) T_Rbrace [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Semicolon shift to state 120
-- On T_Return shift to state 121
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Lbrace shift to state 125
-- On T_Incr shift to state 19
-- On T_If shift to state 126
-- On T_Id shift to state 130
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Cont shift to state 132
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Break shift to state 136
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On test4 shift to state 139
-- On statement shift to state 157
-- On option(test4) shift to state 143
-- On list(statement) shift to state 161
-- On expression shift to state 153
-- On T_Rbrace reduce production list(statement) -> 
-- On T_For reduce production option(test4) -> 

State 120:
statement -> T_Semicolon . [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True reduce production statement -> T_Semicolon 
-- On T_Sub reduce production statement -> T_Semicolon 
-- On T_Semicolon reduce production statement -> T_Semicolon 
-- On T_Return reduce production statement -> T_Semicolon 
-- On T_Rbrace reduce production statement -> T_Semicolon 
-- On T_Null reduce production statement -> T_Semicolon 
-- On T_Not reduce production statement -> T_Semicolon 
-- On T_New reduce production statement -> T_Semicolon 
-- On T_Mul reduce production statement -> T_Semicolon 
-- On T_Lparen reduce production statement -> T_Semicolon 
-- On T_Lbrace reduce production statement -> T_Semicolon 
-- On T_Incr reduce production statement -> T_Semicolon 
-- On T_If reduce production statement -> T_Semicolon 
-- On T_Id reduce production statement -> T_Semicolon 
-- On T_For reduce production statement -> T_Semicolon 
-- On T_False reduce production statement -> T_Semicolon 
-- On T_Else reduce production statement -> T_Semicolon 
-- On T_Del reduce production statement -> T_Semicolon 
-- On T_Decr reduce production statement -> T_Semicolon 
-- On T_Cont reduce production statement -> T_Semicolon 
-- On T_Const_String reduce production statement -> T_Semicolon 
-- On T_Const_Real reduce production statement -> T_Semicolon 
-- On T_Const_Int reduce production statement -> T_Semicolon 
-- On T_Const_Char reduce production statement -> T_Semicolon 
-- On T_Break reduce production statement -> T_Semicolon 
-- On T_Amp reduce production statement -> T_Semicolon 
-- On T_Add reduce production statement -> T_Semicolon 

State 121:
statement -> T_Return . option(expression) T_Semicolon [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On option(expression) shift to state 122
-- On expression shift to state 124
-- On T_Semicolon reduce production option(expression) -> 

State 122:
statement -> T_Return option(expression) . T_Semicolon [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Semicolon shift to state 123

State 123:
statement -> T_Return option(expression) T_Semicolon . [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Sub reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Semicolon reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Return reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Rbrace reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Null reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Not reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_New reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Mul reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Lparen reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Lbrace reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Incr reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_If reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Id reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_For reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_False reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Else reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Del reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Decr reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Cont reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Const_String reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Const_Real reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Const_Int reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Const_Char reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Break reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Amp reduce production statement -> T_Return option(expression) T_Semicolon 
-- On T_Add reduce production statement -> T_Return option(expression) T_Semicolon 

State 124:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Semicolon T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
option(expression) -> expression . [ T_Semicolon T_Rparen ]
-- On T_Sub shift to state 34
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62
-- On T_Semicolon reduce production option(expression) -> expression 
-- On T_Rparen reduce production option(expression) -> expression 

State 125:
statement -> T_Lbrace . list(statement) T_Rbrace [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Semicolon shift to state 120
-- On T_Return shift to state 121
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Lbrace shift to state 125
-- On T_Incr shift to state 19
-- On T_If shift to state 126
-- On T_Id shift to state 130
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Cont shift to state 132
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Break shift to state 136
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On test4 shift to state 139
-- On statement shift to state 157
-- On option(test4) shift to state 143
-- On list(statement) shift to state 159
-- On expression shift to state 153
-- On T_Rbrace reduce production list(statement) -> 
-- On T_For reduce production option(test4) -> 

State 126:
statement -> T_If . T_Lparen expression T_Rparen statement option(test3) [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Lparen shift to state 127

State 127:
statement -> T_If T_Lparen . expression T_Rparen statement option(test3) [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On expression shift to state 128

State 128:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Rparen T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
statement -> T_If T_Lparen expression . T_Rparen statement option(test3) [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Sub shift to state 34
-- On T_Rparen shift to state 129
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62

State 129:
statement -> T_If T_Lparen expression T_Rparen . statement option(test3) [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Semicolon shift to state 120
-- On T_Return shift to state 121
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Lbrace shift to state 125
-- On T_Incr shift to state 19
-- On T_If shift to state 126
-- On T_Id shift to state 130
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Cont shift to state 132
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Break shift to state 136
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On test4 shift to state 139
-- On statement shift to state 140
-- On option(test4) shift to state 143
-- On expression shift to state 153
-- On T_For reduce production option(test4) -> 

State 130:
expression -> T_Id . [ T_Sub T_Semicolon T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> T_Id . T_Lparen option(expression_list) T_Rparen [ T_Sub T_Semicolon T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
test4 -> T_Id . T_Colon [ T_For ]
-- On T_Lparen shift to state 21
-- On T_Colon shift to state 131
-- On T_Sub reduce production expression -> T_Id 
-- On T_Semicolon reduce production expression -> T_Id 
-- On T_Quest reduce production expression -> T_Id 
-- On T_PlusEq reduce production expression -> T_Id 
-- On T_Or reduce production expression -> T_Id 
-- On T_Neq reduce production expression -> T_Id 
-- On T_Mul reduce production expression -> T_Id 
-- On T_Mod_eq reduce production expression -> T_Id 
-- On T_Mod reduce production expression -> T_Id 
-- On T_Minus_eq reduce production expression -> T_Id 
-- On T_Leq reduce production expression -> T_Id 
-- On T_Le reduce production expression -> T_Id 
-- On T_Lbrace reduce production expression -> T_Id 
-- On T_Incr reduce production expression -> T_Id 
-- On T_Gr reduce production expression -> T_Id 
-- On T_Geq reduce production expression -> T_Id 
-- On T_Equal reduce production expression -> T_Id 
-- On T_Eq reduce production expression -> T_Id 
-- On T_Dot_eq reduce production expression -> T_Id 
-- On T_Div_eq reduce production expression -> T_Id 
-- On T_Div reduce production expression -> T_Id 
-- On T_Decr reduce production expression -> T_Id 
-- On T_Comma reduce production expression -> T_Id 
-- On T_And reduce production expression -> T_Id 
-- On T_Add reduce production expression -> T_Id 

State 131:
test4 -> T_Id T_Colon . [ T_For ]
-- On T_For reduce production test4 -> T_Id T_Colon 

State 132:
statement -> T_Cont . option(T_Id) T_Semicolon [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Id shift to state 133
-- On option(T_Id) shift to state 134
-- On T_Semicolon reduce production option(T_Id) -> 

State 133:
option(T_Id) -> T_Id . [ T_Semicolon ]
-- On T_Semicolon reduce production option(T_Id) -> T_Id 

State 134:
statement -> T_Cont option(T_Id) . T_Semicolon [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Semicolon shift to state 135

State 135:
statement -> T_Cont option(T_Id) T_Semicolon . [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Sub reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Semicolon reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Return reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Rbrace reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Null reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Not reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_New reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Mul reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Lparen reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Lbrace reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Incr reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_If reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Id reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_For reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_False reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Else reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Del reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Decr reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Cont reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Const_String reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Const_Real reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Const_Int reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Const_Char reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Break reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Amp reduce production statement -> T_Cont option(T_Id) T_Semicolon 
-- On T_Add reduce production statement -> T_Cont option(T_Id) T_Semicolon 

State 136:
statement -> T_Break . option(T_Id) T_Semicolon [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Id shift to state 133
-- On option(T_Id) shift to state 137
-- On T_Semicolon reduce production option(T_Id) -> 

State 137:
statement -> T_Break option(T_Id) . T_Semicolon [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Semicolon shift to state 138

State 138:
statement -> T_Break option(T_Id) T_Semicolon . [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Sub reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Semicolon reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Return reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Rbrace reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Null reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Not reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_New reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Mul reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Lparen reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Lbrace reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Incr reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_If reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Id reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_For reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_False reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Else reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Del reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Decr reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Cont reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Const_String reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Const_Real reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Const_Int reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Const_Char reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Break reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Amp reduce production statement -> T_Break option(T_Id) T_Semicolon 
-- On T_Add reduce production statement -> T_Break option(T_Id) T_Semicolon 

State 139:
option(test4) -> test4 . [ T_For ]
-- On T_For reduce production option(test4) -> test4 

State 140:
statement -> T_If T_Lparen expression T_Rparen statement . option(test3) [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Else shift to state 141
-- On test3 shift to state 155
-- On option(test3) shift to state 156
-- On T_True reduce production option(test3) -> 
-- On T_Sub reduce production option(test3) -> 
-- On T_Semicolon reduce production option(test3) -> 
-- On T_Return reduce production option(test3) -> 
-- On T_Rbrace reduce production option(test3) -> 
-- On T_Null reduce production option(test3) -> 
-- On T_Not reduce production option(test3) -> 
-- On T_New reduce production option(test3) -> 
-- On T_Mul reduce production option(test3) -> 
-- On T_Lparen reduce production option(test3) -> 
-- On T_Lbrace reduce production option(test3) -> 
-- On T_Incr reduce production option(test3) -> 
-- On T_If reduce production option(test3) -> 
-- On T_Id reduce production option(test3) -> 
-- On T_For reduce production option(test3) -> 
-- On T_False reduce production option(test3) -> 
-- On T_Else reduce production option(test3) -> 
-- On T_Del reduce production option(test3) -> 
-- On T_Decr reduce production option(test3) -> 
-- On T_Cont reduce production option(test3) -> 
-- On T_Const_String reduce production option(test3) -> 
-- On T_Const_Real reduce production option(test3) -> 
-- On T_Const_Int reduce production option(test3) -> 
-- On T_Const_Char reduce production option(test3) -> 
-- On T_Break reduce production option(test3) -> 
-- On T_Amp reduce production option(test3) -> 
-- On T_Add reduce production option(test3) -> 
** Conflict on T_Else

State 141:
test3 -> T_Else . statement [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Semicolon shift to state 120
-- On T_Return shift to state 121
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Lbrace shift to state 125
-- On T_Incr shift to state 19
-- On T_If shift to state 126
-- On T_Id shift to state 130
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Cont shift to state 132
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Break shift to state 136
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On test4 shift to state 139
-- On statement shift to state 142
-- On option(test4) shift to state 143
-- On expression shift to state 153
-- On T_For reduce production option(test4) -> 

State 142:
test3 -> T_Else statement . [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True reduce production test3 -> T_Else statement 
-- On T_Sub reduce production test3 -> T_Else statement 
-- On T_Semicolon reduce production test3 -> T_Else statement 
-- On T_Return reduce production test3 -> T_Else statement 
-- On T_Rbrace reduce production test3 -> T_Else statement 
-- On T_Null reduce production test3 -> T_Else statement 
-- On T_Not reduce production test3 -> T_Else statement 
-- On T_New reduce production test3 -> T_Else statement 
-- On T_Mul reduce production test3 -> T_Else statement 
-- On T_Lparen reduce production test3 -> T_Else statement 
-- On T_Lbrace reduce production test3 -> T_Else statement 
-- On T_Incr reduce production test3 -> T_Else statement 
-- On T_If reduce production test3 -> T_Else statement 
-- On T_Id reduce production test3 -> T_Else statement 
-- On T_For reduce production test3 -> T_Else statement 
-- On T_False reduce production test3 -> T_Else statement 
-- On T_Else reduce production test3 -> T_Else statement 
-- On T_Del reduce production test3 -> T_Else statement 
-- On T_Decr reduce production test3 -> T_Else statement 
-- On T_Cont reduce production test3 -> T_Else statement 
-- On T_Const_String reduce production test3 -> T_Else statement 
-- On T_Const_Real reduce production test3 -> T_Else statement 
-- On T_Const_Int reduce production test3 -> T_Else statement 
-- On T_Const_Char reduce production test3 -> T_Else statement 
-- On T_Break reduce production test3 -> T_Else statement 
-- On T_Amp reduce production test3 -> T_Else statement 
-- On T_Add reduce production test3 -> T_Else statement 

State 143:
statement -> option(test4) . T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_For shift to state 144

State 144:
statement -> option(test4) T_For . T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Lparen shift to state 145

State 145:
statement -> option(test4) T_For T_Lparen . option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On option(expression_list) shift to state 146
-- On expression_list shift to state 70
-- On expression shift to state 71
-- On T_Semicolon reduce production option(expression_list) -> 

State 146:
statement -> option(test4) T_For T_Lparen option(expression_list) . T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Semicolon shift to state 147

State 147:
statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon . option(expression) T_Semicolon option(expression) T_Rparen statement [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On option(expression) shift to state 148
-- On expression shift to state 124
-- On T_Semicolon reduce production option(expression) -> 

State 148:
statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) . T_Semicolon option(expression) T_Rparen statement [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Semicolon shift to state 149

State 149:
statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon . option(expression) T_Rparen statement [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Incr shift to state 19
-- On T_Id shift to state 20
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On option(expression) shift to state 150
-- On expression shift to state 124
-- On T_Rparen reduce production option(expression) -> 

State 150:
statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) . T_Rparen statement [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Rparen shift to state 151

State 151:
statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen . statement [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Semicolon shift to state 120
-- On T_Return shift to state 121
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Lbrace shift to state 125
-- On T_Incr shift to state 19
-- On T_If shift to state 126
-- On T_Id shift to state 130
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Cont shift to state 132
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Break shift to state 136
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On test4 shift to state 139
-- On statement shift to state 152
-- On option(test4) shift to state 143
-- On expression shift to state 153
-- On T_For reduce production option(test4) -> 

State 152:
statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement . [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Sub reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Semicolon reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Return reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Rbrace reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Null reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Not reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_New reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Mul reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Lparen reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Lbrace reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Incr reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_If reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Id reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_For reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_False reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Else reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Del reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Decr reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Cont reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Const_String reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Const_Real reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Const_Int reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Const_Char reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Break reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Amp reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 
-- On T_Add reduce production statement -> option(test4) T_For T_Lparen option(expression_list) T_Semicolon option(expression) T_Semicolon option(expression) T_Rparen statement 

State 153:
expression -> expression . T_Lbrace expression T_Rbrace [ T_Sub T_Semicolon T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_operator expression [ T_Sub T_Semicolon T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . unary_assig [ T_Sub T_Semicolon T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . binary_assig expression [ T_Sub T_Semicolon T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
expression -> expression . T_Quest expression T_Colon expression [ T_Sub T_Semicolon T_Quest T_PlusEq T_Or T_Neq T_Mul T_Mod_eq T_Mod T_Minus_eq T_Leq T_Le T_Lbrace T_Incr T_Gr T_Geq T_Equal T_Eq T_Dot_eq T_Div_eq T_Div T_Decr T_Comma T_And T_Add ]
statement -> expression . T_Semicolon [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Sub shift to state 34
-- On T_Semicolon shift to state 154
-- On T_Quest shift to state 35
-- On T_PlusEq shift to state 37
-- On T_Or shift to state 38
-- On T_Neq shift to state 39
-- On T_Mul shift to state 40
-- On T_Mod_eq shift to state 41
-- On T_Mod shift to state 42
-- On T_Minus_eq shift to state 43
-- On T_Leq shift to state 44
-- On T_Le shift to state 45
-- On T_Lbrace shift to state 46
-- On T_Incr shift to state 19
-- On T_Gr shift to state 49
-- On T_Geq shift to state 50
-- On T_Equal shift to state 51
-- On T_Eq shift to state 52
-- On T_Dot_eq shift to state 53
-- On T_Div_eq shift to state 54
-- On T_Div shift to state 55
-- On T_Decr shift to state 24
-- On T_Comma shift to state 56
-- On T_And shift to state 57
-- On T_Add shift to state 58
-- On unary_assig shift to state 59
-- On binary_operator shift to state 60
-- On binary_assig shift to state 62

State 154:
statement -> expression T_Semicolon . [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True reduce production statement -> expression T_Semicolon 
-- On T_Sub reduce production statement -> expression T_Semicolon 
-- On T_Semicolon reduce production statement -> expression T_Semicolon 
-- On T_Return reduce production statement -> expression T_Semicolon 
-- On T_Rbrace reduce production statement -> expression T_Semicolon 
-- On T_Null reduce production statement -> expression T_Semicolon 
-- On T_Not reduce production statement -> expression T_Semicolon 
-- On T_New reduce production statement -> expression T_Semicolon 
-- On T_Mul reduce production statement -> expression T_Semicolon 
-- On T_Lparen reduce production statement -> expression T_Semicolon 
-- On T_Lbrace reduce production statement -> expression T_Semicolon 
-- On T_Incr reduce production statement -> expression T_Semicolon 
-- On T_If reduce production statement -> expression T_Semicolon 
-- On T_Id reduce production statement -> expression T_Semicolon 
-- On T_For reduce production statement -> expression T_Semicolon 
-- On T_False reduce production statement -> expression T_Semicolon 
-- On T_Else reduce production statement -> expression T_Semicolon 
-- On T_Del reduce production statement -> expression T_Semicolon 
-- On T_Decr reduce production statement -> expression T_Semicolon 
-- On T_Cont reduce production statement -> expression T_Semicolon 
-- On T_Const_String reduce production statement -> expression T_Semicolon 
-- On T_Const_Real reduce production statement -> expression T_Semicolon 
-- On T_Const_Int reduce production statement -> expression T_Semicolon 
-- On T_Const_Char reduce production statement -> expression T_Semicolon 
-- On T_Break reduce production statement -> expression T_Semicolon 
-- On T_Amp reduce production statement -> expression T_Semicolon 
-- On T_Add reduce production statement -> expression T_Semicolon 

State 155:
option(test3) -> test3 . [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True reduce production option(test3) -> test3 
-- On T_Sub reduce production option(test3) -> test3 
-- On T_Semicolon reduce production option(test3) -> test3 
-- On T_Return reduce production option(test3) -> test3 
-- On T_Rbrace reduce production option(test3) -> test3 
-- On T_Null reduce production option(test3) -> test3 
-- On T_Not reduce production option(test3) -> test3 
-- On T_New reduce production option(test3) -> test3 
-- On T_Mul reduce production option(test3) -> test3 
-- On T_Lparen reduce production option(test3) -> test3 
-- On T_Lbrace reduce production option(test3) -> test3 
-- On T_Incr reduce production option(test3) -> test3 
-- On T_If reduce production option(test3) -> test3 
-- On T_Id reduce production option(test3) -> test3 
-- On T_For reduce production option(test3) -> test3 
-- On T_False reduce production option(test3) -> test3 
-- On T_Else reduce production option(test3) -> test3 
-- On T_Del reduce production option(test3) -> test3 
-- On T_Decr reduce production option(test3) -> test3 
-- On T_Cont reduce production option(test3) -> test3 
-- On T_Const_String reduce production option(test3) -> test3 
-- On T_Const_Real reduce production option(test3) -> test3 
-- On T_Const_Int reduce production option(test3) -> test3 
-- On T_Const_Char reduce production option(test3) -> test3 
-- On T_Break reduce production option(test3) -> test3 
-- On T_Amp reduce production option(test3) -> test3 
-- On T_Add reduce production option(test3) -> test3 

State 156:
statement -> T_If T_Lparen expression T_Rparen statement option(test3) . [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Sub reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Semicolon reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Return reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Rbrace reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Null reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Not reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_New reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Mul reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Lparen reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Lbrace reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Incr reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_If reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Id reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_For reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_False reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Else reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Del reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Decr reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Cont reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Const_String reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Const_Real reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Const_Int reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Const_Char reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Break reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Amp reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 
-- On T_Add reduce production statement -> T_If T_Lparen expression T_Rparen statement option(test3) 

State 157:
list(statement) -> statement . list(statement) [ T_Rbrace ]
-- On T_True shift to state 10
-- On T_Sub shift to state 11
-- On T_Semicolon shift to state 120
-- On T_Return shift to state 121
-- On T_Null shift to state 12
-- On T_Not shift to state 13
-- On T_New shift to state 14
-- On T_Mul shift to state 17
-- On T_Lparen shift to state 18
-- On T_Lbrace shift to state 125
-- On T_Incr shift to state 19
-- On T_If shift to state 126
-- On T_Id shift to state 130
-- On T_False shift to state 22
-- On T_Del shift to state 23
-- On T_Decr shift to state 24
-- On T_Cont shift to state 132
-- On T_Const_String shift to state 25
-- On T_Const_Real shift to state 26
-- On T_Const_Int shift to state 27
-- On T_Const_Char shift to state 28
-- On T_Break shift to state 136
-- On T_Amp shift to state 29
-- On T_Add shift to state 30
-- On unary_operator shift to state 31
-- On unary_assig shift to state 32
-- On test4 shift to state 139
-- On statement shift to state 157
-- On option(test4) shift to state 143
-- On list(statement) shift to state 158
-- On expression shift to state 153
-- On T_Rbrace reduce production list(statement) -> 
-- On T_For reduce production option(test4) -> 

State 158:
list(statement) -> statement list(statement) . [ T_Rbrace ]
-- On T_Rbrace reduce production list(statement) -> statement list(statement) 

State 159:
statement -> T_Lbrace list(statement) . T_Rbrace [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Rbrace shift to state 160

State 160:
statement -> T_Lbrace list(statement) T_Rbrace . [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Else T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Sub reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Semicolon reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Return reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Rbrace reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Null reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Not reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_New reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Mul reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Lparen reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Lbrace reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Incr reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_If reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Id reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_For reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_False reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Else reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Del reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Decr reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Cont reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Const_String reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Const_Real reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Const_Int reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Const_Char reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Break reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Amp reduce production statement -> T_Lbrace list(statement) T_Rbrace 
-- On T_Add reduce production statement -> T_Lbrace list(statement) T_Rbrace 

State 161:
function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) . T_Rbrace [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Rbrace shift to state 162

State 162:
function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace . [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Void reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_True reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Sub reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Semicolon reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Return reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Rbrace reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Null reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Not reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_New reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Mul reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Lparen reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Lbrace reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Int reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Incr reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_If reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Id reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_For reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_False reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Eof reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Double reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Del reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Decr reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Cont reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Const_String reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Const_Real reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Const_Int reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Const_Char reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Char reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Break reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Bool reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Amp reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 
-- On T_Add reduce production function_def -> result_type T_Id T_Lparen option(parameter_list) T_Rparen T_Lbrace list(declation) list(statement) T_Rbrace 

State 163:
declation -> function_def . [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Void reduce production declation -> function_def 
-- On T_True reduce production declation -> function_def 
-- On T_Sub reduce production declation -> function_def 
-- On T_Semicolon reduce production declation -> function_def 
-- On T_Return reduce production declation -> function_def 
-- On T_Rbrace reduce production declation -> function_def 
-- On T_Null reduce production declation -> function_def 
-- On T_Not reduce production declation -> function_def 
-- On T_New reduce production declation -> function_def 
-- On T_Mul reduce production declation -> function_def 
-- On T_Lparen reduce production declation -> function_def 
-- On T_Lbrace reduce production declation -> function_def 
-- On T_Int reduce production declation -> function_def 
-- On T_Incr reduce production declation -> function_def 
-- On T_If reduce production declation -> function_def 
-- On T_Id reduce production declation -> function_def 
-- On T_For reduce production declation -> function_def 
-- On T_False reduce production declation -> function_def 
-- On T_Eof reduce production declation -> function_def 
-- On T_Double reduce production declation -> function_def 
-- On T_Del reduce production declation -> function_def 
-- On T_Decr reduce production declation -> function_def 
-- On T_Cont reduce production declation -> function_def 
-- On T_Const_String reduce production declation -> function_def 
-- On T_Const_Real reduce production declation -> function_def 
-- On T_Const_Int reduce production declation -> function_def 
-- On T_Const_Char reduce production declation -> function_def 
-- On T_Char reduce production declation -> function_def 
-- On T_Break reduce production declation -> function_def 
-- On T_Bool reduce production declation -> function_def 
-- On T_Amp reduce production declation -> function_def 
-- On T_Add reduce production declation -> function_def 

State 164:
declation -> function_declation . [ T_Void T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Int T_Incr T_If T_Id T_For T_False T_Eof T_Double T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Char T_Break T_Bool T_Amp T_Add ]
-- On T_Void reduce production declation -> function_declation 
-- On T_True reduce production declation -> function_declation 
-- On T_Sub reduce production declation -> function_declation 
-- On T_Semicolon reduce production declation -> function_declation 
-- On T_Return reduce production declation -> function_declation 
-- On T_Rbrace reduce production declation -> function_declation 
-- On T_Null reduce production declation -> function_declation 
-- On T_Not reduce production declation -> function_declation 
-- On T_New reduce production declation -> function_declation 
-- On T_Mul reduce production declation -> function_declation 
-- On T_Lparen reduce production declation -> function_declation 
-- On T_Lbrace reduce production declation -> function_declation 
-- On T_Int reduce production declation -> function_declation 
-- On T_Incr reduce production declation -> function_declation 
-- On T_If reduce production declation -> function_declation 
-- On T_Id reduce production declation -> function_declation 
-- On T_For reduce production declation -> function_declation 
-- On T_False reduce production declation -> function_declation 
-- On T_Eof reduce production declation -> function_declation 
-- On T_Double reduce production declation -> function_declation 
-- On T_Del reduce production declation -> function_declation 
-- On T_Decr reduce production declation -> function_declation 
-- On T_Cont reduce production declation -> function_declation 
-- On T_Const_String reduce production declation -> function_declation 
-- On T_Const_Real reduce production declation -> function_declation 
-- On T_Const_Int reduce production declation -> function_declation 
-- On T_Const_Char reduce production declation -> function_declation 
-- On T_Char reduce production declation -> function_declation 
-- On T_Break reduce production declation -> function_declation 
-- On T_Bool reduce production declation -> function_declation 
-- On T_Amp reduce production declation -> function_declation 
-- On T_Add reduce production declation -> function_declation 

State 165:
list(declation) -> declation . list(declation) [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_Void shift to state 1
-- On T_Int shift to state 2
-- On T_Double shift to state 3
-- On T_Char shift to state 4
-- On T_Bool shift to state 5
-- On variable_declation shift to state 6
-- On type_i shift to state 7
-- On result_type shift to state 101
-- On list(declation) shift to state 166
-- On function_def shift to state 163
-- On function_declation shift to state 164
-- On declation shift to state 165
-- On basic_type shift to state 83
-- On T_True reduce production list(declation) -> 
-- On T_Sub reduce production list(declation) -> 
-- On T_Semicolon reduce production list(declation) -> 
-- On T_Return reduce production list(declation) -> 
-- On T_Rbrace reduce production list(declation) -> 
-- On T_Null reduce production list(declation) -> 
-- On T_Not reduce production list(declation) -> 
-- On T_New reduce production list(declation) -> 
-- On T_Mul reduce production list(declation) -> 
-- On T_Lparen reduce production list(declation) -> 
-- On T_Lbrace reduce production list(declation) -> 
-- On T_Incr reduce production list(declation) -> 
-- On T_If reduce production list(declation) -> 
-- On T_Id reduce production list(declation) -> 
-- On T_For reduce production list(declation) -> 
-- On T_False reduce production list(declation) -> 
-- On T_Del reduce production list(declation) -> 
-- On T_Decr reduce production list(declation) -> 
-- On T_Cont reduce production list(declation) -> 
-- On T_Const_String reduce production list(declation) -> 
-- On T_Const_Real reduce production list(declation) -> 
-- On T_Const_Int reduce production list(declation) -> 
-- On T_Const_Char reduce production list(declation) -> 
-- On T_Break reduce production list(declation) -> 
-- On T_Amp reduce production list(declation) -> 
-- On T_Add reduce production list(declation) -> 

State 166:
list(declation) -> declation list(declation) . [ T_True T_Sub T_Semicolon T_Return T_Rbrace T_Null T_Not T_New T_Mul T_Lparen T_Lbrace T_Incr T_If T_Id T_For T_False T_Del T_Decr T_Cont T_Const_String T_Const_Real T_Const_Int T_Const_Char T_Break T_Amp T_Add ]
-- On T_True reduce production list(declation) -> declation list(declation) 
-- On T_Sub reduce production list(declation) -> declation list(declation) 
-- On T_Semicolon reduce production list(declation) -> declation list(declation) 
-- On T_Return reduce production list(declation) -> declation list(declation) 
-- On T_Rbrace reduce production list(declation) -> declation list(declation) 
-- On T_Null reduce production list(declation) -> declation list(declation) 
-- On T_Not reduce production list(declation) -> declation list(declation) 
-- On T_New reduce production list(declation) -> declation list(declation) 
-- On T_Mul reduce production list(declation) -> declation list(declation) 
-- On T_Lparen reduce production list(declation) -> declation list(declation) 
-- On T_Lbrace reduce production list(declation) -> declation list(declation) 
-- On T_Incr reduce production list(declation) -> declation list(declation) 
-- On T_If reduce production list(declation) -> declation list(declation) 
-- On T_Id reduce production list(declation) -> declation list(declation) 
-- On T_For reduce production list(declation) -> declation list(declation) 
-- On T_False reduce production list(declation) -> declation list(declation) 
-- On T_Del reduce production list(declation) -> declation list(declation) 
-- On T_Decr reduce production list(declation) -> declation list(declation) 
-- On T_Cont reduce production list(declation) -> declation list(declation) 
-- On T_Const_String reduce production list(declation) -> declation list(declation) 
-- On T_Const_Real reduce production list(declation) -> declation list(declation) 
-- On T_Const_Int reduce production list(declation) -> declation list(declation) 
-- On T_Const_Char reduce production list(declation) -> declation list(declation) 
-- On T_Break reduce production list(declation) -> declation list(declation) 
-- On T_Amp reduce production list(declation) -> declation list(declation) 
-- On T_Add reduce production list(declation) -> declation list(declation) 

State 167:
program' -> program . [ # ]
-- On # accept program

State 168:
program -> nonempty_list(declation) . T_Eof [ # ]
-- On T_Eof shift to state 169

State 169:
program -> nonempty_list(declation) T_Eof . [ # ]
-- On # reduce production program -> nonempty_list(declation) T_Eof 

State 170:
nonempty_list(declation) -> declation . [ T_Eof ]
nonempty_list(declation) -> declation . nonempty_list(declation) [ T_Eof ]
-- On T_Void shift to state 1
-- On T_Int shift to state 2
-- On T_Double shift to state 3
-- On T_Char shift to state 4
-- On T_Bool shift to state 5
-- On variable_declation shift to state 6
-- On type_i shift to state 7
-- On result_type shift to state 101
-- On nonempty_list(declation) shift to state 171
-- On function_def shift to state 163
-- On function_declation shift to state 164
-- On declation shift to state 170
-- On basic_type shift to state 83
-- On T_Eof reduce production nonempty_list(declation) -> declation 

State 171:
nonempty_list(declation) -> declation nonempty_list(declation) . [ T_Eof ]
-- On T_Eof reduce production nonempty_list(declation) -> declation nonempty_list(declation) 

